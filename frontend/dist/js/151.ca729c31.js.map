{"version":3,"file":"js/151.ca729c31.js","mappings":"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","sources":["webpack://webserver/./src/views/Chat.vue","webpack://webserver/./src/popup/EditUser.vue","webpack://webserver/./src/popup/EditUser.vue?5d2f","webpack://webserver/./src/popup/ChangePass.vue","webpack://webserver/./src/popup/ChangePass.vue?4678","webpack://webserver/./src/popup/ImagePreview.vue","webpack://webserver/./src/popup/ImagePreview.vue?5984","webpack://webserver/./src/popup/Emogi.vue","webpack://webserver/./src/popup/Emogi.vue?f234","webpack://webserver/./src/views/Chat.vue?65ee"],"sourcesContent":["<template>\r\n    <EditUser\r\n    v-if=\"isShowEditUser\"\r\n    v-on:closeEdit=\"closeEditUser\"\r\n    v-on:changePass=\"showChangePass\"\r\n    v-bind:user=\"user\"\r\n    />\r\n    <ChangePass\r\n    v-if=\"isShowChangePass\"\r\n    v-on:close=\"closeChangePass\"\r\n    v-bind:user_id=\"user.id\"\r\n    />\r\n    <Transition name=\"picker\">\r\n        <EmojiPicker\r\n        v-if=\"isEmoji\"\r\n        v-on:set_emoji=\"set_emoji\"\r\n        v-on:close=\"closeEmoji\"\r\n        />\r\n    </Transition>\r\n    <ImagePreview\r\n    v-if=\"isShowImagePreview\"\r\n    v-on:close=\"closePopUpImage\"\r\n    v-bind:img=\"popUpImgSrc\"\r\n    />\r\n    <div class=\"container-chat\">\r\n        <div class=\"chat_sidebar\">\r\n            <div class=\"search\">\r\n                <input type=\"search\" v-model=\"filter_name\" id=\"search\" placeholder=\"Поиск...\" autocomplete=\"off\">\r\n            </div>\r\n            <ul>\r\n                <li v-for=\"room in roomsList\" :key=\"room.id\" v-on:click=\"roomClick(room)\" class=\"room\" :class=\"{ selected: roomSelected(room.id) }\">\r\n                    {{ room.name }} \r\n                    <span v-if=\"room.isActiveMessage\" class=\"recieve_message\">{{ room.numOfMessages }}</span>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li v-for=\"user in filteredList\" :key=\"user.id\" v-on:click=\"userListClick(user)\" :class=\"{ selected: roomSelected(user.id) }\">\r\n                    <p :class=\"{online: user.online}\"> {{ user.name }} <i class=\"status\" :class=\"{status_online: user.online}\"></i></p> \r\n                    <span v-if=\"user.isActiveMessage\" class=\"recieve_message\">{{ user.numOfMessages }}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <section class=\"chat_content\">\r\n            <div class=\"header\">\r\n                <div class=\"selected_room\">\r\n                    <h1>{{ selected_room.name }}</h1>\r\n                    <i v-show=\"!isRoom\" class=\"icon\" :class=\"{i_online:selected_room.online, i_offline:!selected_room.online}\"></i>\r\n                </div>\r\n                <h2>\r\n                    <span class=\"error\" v-if=\"connection_error\">network connection error</span>\r\n                </h2>\r\n                <div class=\"header_right\">\r\n                    <p class=\"user\">{{ setUserName() }}</p>\r\n                    <button v-on:click=\"showEditUser\" class=\"i_properties icon\"></button>                    \r\n                    <button v-on:click=\"logout\" class=\"i_logout icon\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"message_container\">\r\n                <div class=\"messages\" id=\"messages\" v-on:click=\" messageSpaceClick()\">                \r\n                    <div v-for=\"(m, idx) in rooms[indexOfSelectedRoom].messages\" :key=\"'m-' + idx\" class=\"message\" :id=idx+1>\r\n                        <div :class=\"{ 'send' : m.from=='me', 'response' : m.from=='other'}\">\r\n                            <ul>\r\n                                <li class=\"error\" v-if=\"m.err==true\">Ошибка отправки сообщения</li>\r\n                                <li class=\"msg_name\">{{ m.name }}</li>\r\n                                <li class=\"text\" v-if=\"m.type=='text'\">{{ m.message }}</li>\r\n                                <img :src=m.message v-if=\"m.type=='image'\" v-on:click=\"popUpImage(m.message)\">\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"chat_footer\">\r\n                <div class=\"image_preview\" v-show=\"isImage\">\r\n                    <div class=\"image\">\r\n                        <div class=\"close_preview\" v-on:click=\"closePreview\"><i class=\"icon i_close\"></i></div>\r\n                        <img :src=\"imageSrc\">\r\n                    </div>\r\n                    <div class=\"image_options\">\r\n                        <input type=\"checkbox\" name=\"compress image\" id=\"\" v-model=\"isCompressImage\"><p>Сжать изображение</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text_field\">\r\n                    <input v-model=\"text\" type=\"text\" id=\"add_text\" placeholder=\"Сообщение...\" @keyup.enter=\"send_message\"/>\r\n                    <i class=\"i_emoji icon\" @mouseenter=\"showEmoji\" @mouseleave=\"closeEmoji\"></i>\r\n                    <input type=\"file\" accept=\"image/*\" id=\"add_pic\" @:change=\"loadImage\" ref=\"imgUpload\"><label for=\"add_pic\"><i class=\"i_add_pic icon\" data-title=\"Add picture\"></i></label>\r\n                    <i class=\"i_send icon\" v-if=\"showSendBtn()\" @click=\"send_message\" data-title=\"Send message\"></i>\r\n                </div>\r\n            </div>           \r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport EditUser from '../popup/EditUser.vue'\r\nimport ChangePass from '../popup/ChangePass.vue'\r\nimport ImagePreview from '../popup/ImagePreview.vue'\r\nimport EmojiPicker from '../popup/Emogi.vue'\r\nimport {get} from '../api/netork.js'\r\nimport { post } from '../api/netork.js'\r\nimport {protocol} from '../api/protocol.js'\r\nimport { wsConnection } from '../api/netork.js'\r\n\r\nexport default{\r\n    components:{\r\n        EditUser,\r\n        ChangePass,\r\n        ImagePreview,\r\n        EmojiPicker\r\n    }, \r\n    data(){\r\n        return {\r\n            id: 0,\r\n            user_name: \"\",\r\n            isShowEditUser: false,\r\n            isShowChangePass: false,\r\n            isEmoji:false,\r\n            isShowImagePreview: false,\r\n            isImage: false,\r\n            isCompressImage: true,\r\n            imageSrc:'',\r\n            popUpImgSrc:'',\r\n            roomsList:[{\r\n                id:0,\r\n                name:\"Общие\",\r\n                isActiveMessage:false,\r\n                numOfActiveMessages:0,\r\n            }],\r\n            list:[{\r\n                id:0,\r\n                name: \"\",\r\n                online: false,\r\n                isActiveMessage:false,\r\n                numOfActiveMessages:0,\r\n            }],\r\n            filter_name: \"\",\r\n            isRoom: true,\r\n            selected_room: {\r\n                id: 0,\r\n                name:'Общие',\r\n                online:false,\r\n                lastLoadedNumber: 0,\r\n            },\r\n            rooms:[{\r\n                id: 0,\r\n                lastLoadedNumber: 0,\r\n                messages:[],\r\n            }],\r\n            connection_ready: false,\r\n            connection_error: true,\r\n            websocket: null,\r\n            control: protocol.ControlCommand,\r\n            data: protocol.Data,\r\n            assembler: protocol.assembler,\r\n            text: \"\",\r\n            messages:[],\r\n            selectRoomMessages: [],\r\n            observerOptions:{\r\n                root: null,\r\n                rootMargin: '0px',\r\n                threshold: 0.1,\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.init_chat();\r\n    },\r\n    methods:{\r\n        init_chat(){\r\n            get('/chat')\r\n            .then((resp) =>{\r\n                this.id = resp.data.user;\r\n                if (parseInt(localStorage.getItem('id')) != this.id){\r\n                    localStorage.clear();\r\n                    localStorage.setItem('id', this.id);\r\n                }\r\n                if (localStorage.getItem('name') == null){\r\n                    this.ask_name(this.id);\r\n                } else {\r\n                    this.user_name = localStorage.getItem('name');\r\n                }\r\n                this.init_ws_chat(this.id);\r\n            })\r\n            .catch((err) =>{\r\n                if (err.message == 'Network Error'){\r\n                    return\r\n                }\r\n                if (err.response.status == 401){\r\n                    this.$router.push('/login')\r\n                }\r\n                return 'false'\r\n            })\r\n        },\r\n\r\n        ask_name(id){\r\n            get('/username?id='+ id)\r\n            .then((resp) =>{\r\n                localStorage.setItem('name',resp.data.name);\r\n                this.user_name = resp.data.name;\r\n                return true\r\n            })\r\n            .catch((err) => {\r\n                if (err.message == 'Network Error'){\r\n                    return\r\n                }\r\n                if (err.response.status == 401){\r\n                    this.$router.push('/login')\r\n                }\r\n                return 'false'\r\n            })\r\n        },\r\n\r\n        init_ws_chat(id){\r\n            this.websocket = wsConnection('/ws?id='+ id);\r\n            \r\n            this.websocket.onopen = () => {\r\n                console.log(\"socket is open\")\r\n                this.connection_ready = true;\r\n                this.connection_error = false;\r\n            };\r\n            this.websocket.onmessage = this.onSocketMesssage;\r\n            this.websocket.onerror   = this.onSockerError;\r\n        },\r\n        onSocketMesssage(event){\r\n            let message = new Uint8Array(event.data);\r\n            switch (message[0]){\r\n                case 0: // Control\r\n                    this.controlCommandDecode(message.subarray(1));\r\n                    break;\r\n                case 1: //Data\r\n                    this.dataMessageDecode(message.subarray(1));\r\n                    break;\r\n                case 3: //Error\r\n                    this.errorMessageDecode(message.subarray(1));\r\n                    break;    \r\n            }\r\n        },\r\n        onSockerError(evnt){\r\n            this.connection_error = true;\r\n            this.connection_ready = false;\r\n            console.log(evnt)\r\n        },\r\n        \r\n        send_message(){\r\n            \r\n            this.data.clear();\r\n            if (this.isRoom == true){\r\n                this.data.RoomId = this.selected_room.id;\r\n            } else {\r\n                this.data.UserId = this.selected_room.id;\r\n            }\r\n            let r = this.findRoom(this.selected_room.id);\r\n            this.data.IndexNumber = r.messages.length + 1;\r\n            this.data.DataMessageType.value = 1;\r\n            if (this.imageSrc != ''){\r\n                if (this.isCompressImage == true){\r\n                    this.imageSrc = this.compressImage(this.imageSrc);\r\n                }\r\n                let binaryStr = atob(this.imageSrc.slice(23));\r\n                this.data.DataMessageFormat.value = 2;\r\n                this.sendBySocket(binaryStr);\r\n                r.messages.push({from:\"me\", type: \"image\", message: this.imageSrc, err: false});\r\n                this.closePreview();\r\n            }\r\n            if (this.text != ''){\r\n                this.data.DataMessageFormat.value = 1;\r\n                this.sendBySocket(this.text);\r\n                r.messages.push({from:\"me\", type: \"text\", message: this.text, err: false});\r\n                this.text=\"\";\r\n            }\r\n        },\r\n\r\n        sendBySocket(text){\r\n            let dataRes = new TextEncoder();\r\n            let binaryData = dataRes.encode(text);\r\n            if (binaryData.length > this.assembler.maxLength){\r\n                this.data.UserData.Fragmentation.On = true;\r\n                this.assembler.fullMessage = binaryData;\r\n                let result = this.assembler.fragmentation()\r\n                for (let i = 1; i <= result.length; i++){\r\n                    if (i == 1){\r\n                        this.data.UserData.Fragmentation.FragmentType = 2;\r\n                    } else if (i == result.length){\r\n                        this.data.UserData.Fragmentation.FragmentType = 1;\r\n                    } else {\r\n                        this.data.UserData.Fragmentation.FragmentType = 0;\r\n                    }\r\n                    this.data.UserData.Fragmentation.Counter = i;\r\n                    this.data.UserData.Data = result[i-1];\r\n                    this.websocket.send(this.data.code());\r\n                }\r\n            }else{\r\n                this.data.UserData.Data = binaryData;\r\n                this.websocket.send(this.data.code());\r\n            }\r\n        },\r\n\r\n        controlCommandDecode(raw){\r\n            this.control.clear();\r\n            this.control.decode(raw);\r\n            this.processingControlCommand();     \r\n        },\r\n\r\n        processingControlCommand(){\r\n            switch (this.control.ControlMessageType.value){\r\n                case protocol.ControlMessage.UserNameResponse: // User Name Response\r\n                    this.user_name = this.control.UserName;\r\n                    break;\r\n                case protocol.ControlMessage.Connect: // Connect\r\n                    this.connectUser(this.control.UserId);\r\n                    break;\r\n                case protocol.ControlMessage.Disconnect: //Disconnect\r\n                    this.disconnectUser(this.control.UserId);\r\n                    break;\r\n                case protocol.ControlMessage.Registration: //Registration\r\n                    this.registrationNewUser(this.control.UserId, this.control.UserName);\r\n                    break;\r\n                case protocol.ControlMessage.UserUpdate: // User Update    \r\n                    break;\r\n                case protocol.ControlMessage.UsersList: // Users List\r\n                    this.processingUsersList(this.control);\r\n                    break;\r\n                case protocol.ControlMessage.NumberOfMessages: // Number of Messages\r\n                    this.fillMessageList(this.control.NumberOfMessages.NumOfMessages);\r\n                    break;    \r\n                default:\r\n                    break;        \r\n            }\r\n        },\r\n\r\n        dataMessageDecode(raw){\r\n            this.data.clear();\r\n            this.data.decode(raw);\r\n            let message = {\r\n                from: \"me\",\r\n                name: \"\",\r\n                type: \"\",\r\n                data: \"\",\r\n                room: 0,\r\n                indexNumber: 0,\r\n            };\r\n            if (this.data.UserData.Fragmentation.On == true){\r\n                this.assembler.clear();\r\n                let id = 0;\r\n                if (isNaN(this.data.RoomId) == false){\r\n                    id = this.data.RoomId;\r\n                } else {\r\n                    id = this.data.UserId;\r\n                }\r\n                let assemblePart = {\r\n                    id: id,\r\n                    type: this.data.UserData.Fragmentation.FragmentType,\r\n                    number: this.data.UserData.Fragmentation.Counter,\r\n                    data: this.data.UserData.Data\r\n                }\r\n                this.assembler.message = assemblePart;\r\n                this.assembler.assembling();\r\n                if (this.assembler.fullMessage == null){\r\n                    return\r\n                }\r\n                this.data.UserData.Data = this.assembler.fullMessage;\r\n            }\r\n            let text = new TextDecoder();\r\n            let strData = text.decode(this.data.UserData.Data);\r\n\r\n            if (this.data.UserId != this.id){\r\n                message.from = \"other\"\r\n                message.name = this.nameFromId(this.data.UserId);\r\n            }\r\n\r\n            message.type = this.data.DataMessageFormat.toString();\r\n\r\n            if (this.data.DataMessageFormat.toString() == 'image'){\r\n                message.data = `data:image/jpeg;base64,${btoa(strData)}`;\r\n            }\r\n\r\n            if (this.data.DataMessageFormat.toString() == 'text'){\r\n                message.data = strData;\r\n            }\r\n\r\n            switch (this.data.DataMessageType.toString()){\r\n                case 'new message':\r\n                    message.name = this.nameFromId(this.data.UserId);\r\n                    if (isNaN(this.data.RoomId) == false){\r\n                        message.room = this.data.RoomId;\r\n                        this.setActiveMessageInRoom(this.data.RoomId);\r\n                    }else{\r\n                        message.room = this.data.UserId;\r\n                        this.setActiveMessageInList(this.data.UserId);\r\n                    } \r\n                    this.newMessageProcessing(message);\r\n                    break;\r\n                case 'old message':\r\n                    if (isNaN(this.data.RoomId) == true){\r\n                        break;\r\n                    }\r\n                    message.room = this.data.RoomId;\r\n                    message.indexNumber = this.data.IndexNumber;   \r\n                    this.oldMessageProcessing(message);\r\n                    break;\r\n                default:\r\n                    break;    \r\n            }\r\n        },\r\n\r\n        newMessageProcessing(message){\r\n            let r = this.findRoom(message.room);\r\n\r\n            r.messages.push({from:\"other\", name: message.name, type: message.type, message: message.data, err: false});           \r\n\r\n            const messages_div = document.getElementById('messages');\r\n            messages_div.scrollTo({top: messages_div.scrollHeight, behavior: 'smooth'});\r\n        },\r\n\r\n        oldMessageProcessing(message){\r\n            let r = this.findRoom(message.room);\r\n            r.lastLoadedNumber = message.indexNumber;\r\n            this.selected_room.lastLoadedNumber = message.indexNumber;\r\n\r\n            if (r.messages.length < message.indexNumber){           \r\n                r.messages.push({from: message.from, name: message.name, type: message.type, message: message.data, err: false});\r\n            } else {\r\n                    r.messages[message.indexNumber-1].from = message.from;\r\n                    r.messages[message.indexNumber-1].name = message.name;\r\n                    r.messages[message.indexNumber-1].type = message.type;                \r\n                    r.messages[message.indexNumber-1].message = message.data;\r\n            }\r\n            const messages_div = document.getElementById('messages');\r\n            messages_div.scrollTo({top: messages_div.scrollHeight});\r\n        },\r\n\r\n        errorMessageDecode(raw){\r\n            let err = protocol.Error;\r\n            err.clear();\r\n            err.decode(raw);\r\n            if (err.ErrMessageType.toString() == 'data'){\r\n                let r = this.findRoom(err.UserId);\r\n                if (r.messages.length < err.IndexNumber){\r\n                    return\r\n                }\r\n                r.messages[err.IndexNumber-1].err = true;\r\n            }\r\n        },\r\n\r\n        connectUser(id){\r\n            if (this.selected_room.id == id){\r\n                this.selected_room.online = true\r\n            }\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    this.list[i].online = true\r\n                    return\r\n                }\r\n            }\r\n        },\r\n\r\n        disconnectUser(id){\r\n            if (this.selected_room.id == id){\r\n                this.selected_room.online = false\r\n            }\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    this.list[i].online = false\r\n                    return\r\n                }\r\n            }\r\n        },\r\n\r\n        registrationNewUser(id, name){\r\n            this.list.push({id: id, name: name, online:false, isActiveMessage: false, numOfMessages: 0})\r\n            let r = this.findRoom(0);\r\n            r.messages.push({from:\"other\", name: name, message: 'Зарегестрирован новый пользователь', err: false});\r\n        },\r\n\r\n        processingUsersList(control){\r\n            let activeMessage = false;\r\n            if (control.UsersList.ListCommand == 'set list' || control.ListCommand == 'refresh list'){\r\n                this.list.length = 0; // обнуляем старые данные\r\n                this.rooms.length = 1;\r\n            }\r\n            for (let element of control.UsersList.ListElements){\r\n                if (element[1].nrm != 0){\r\n                    activeMessage = true;\r\n                } else {\r\n                    activeMessage = false;\r\n                }\r\n                this.list.push({id: element[0],name:element[1].name, online: element[1].online, isActiveMessage: activeMessage, numOfMessages:  element[1].nrm});\r\n                this.rooms.push({id: element[0], lastLoadedNumber:0, messages:[]});\r\n                }\r\n        },\r\n\r\n        fillMessageList(num){\r\n            if (num == 0){\r\n                return\r\n            }\r\n            let r = this.findRoom(this.selected_room.id)\r\n            for (let i = 0; i < num; i++){\r\n                r.messages.push({from:\"me\", name: \"\", type: \"text\", message: '', err: false})\r\n            }\r\n            this.selected_room.lastLoadedNumber = num;\r\n            this.$nextTick( () =>\r\n                this.observeMessages()\r\n            )\r\n        },\r\n\r\n        findRoom(id) {\r\n        for (let i = 0; i < this.rooms.length; i++) {\r\n          if (this.rooms[i].id == id) {\r\n              return this.rooms[i];\r\n          }\r\n        }\r\n        },\r\n\r\n        nameFromId(id){\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    return this.list[i].name\r\n                }\r\n            }\r\n        },\r\n\r\n        setActiveMessageInRoom(id){\r\n            for (let i = 0; i<this.roomsList.length; i++ ){\r\n                if (this.roomsList[i].id == id){\r\n                   this.roomsList[i].isActiveMessage = true\r\n                   this.roomsList[i].numOfMessages++\r\n                   return\r\n                }\r\n            }\r\n        },\r\n\r\n        setActiveMessageInList(id){\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                   this.list[i].isActiveMessage = true\r\n                   this.list[i].numOfMessages++\r\n                   return\r\n                }\r\n            }\r\n        },\r\n\r\n        logout(){\r\n            let body = {id: this.id};\r\n            post('/logout', body)\r\n            .then(() => {\r\n                localStorage.removeItem('name');\r\n                this.websocket.close(1000, \"работа закончена\");\r\n                this.$router.push('/login');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n\r\n        setUserName(){            \r\n            return this.user_name;\r\n        },\r\n\r\n        showEditUser(){\r\n            this.isShowEditUser = true;\r\n        },\r\n\r\n        showEmoji(){\r\n            this.isEmoji = true;\r\n        },\r\n\r\n        closeEmoji(event){\r\n            if (event == undefined){\r\n                this.isEmoji = false;\r\n            }else if (event.offsetY > 0){\r\n                this.isEmoji = false;\r\n            }\r\n        },\r\n\r\n        closeEditUser(){\r\n            this.isShowEditUser = false;\r\n        },\r\n\r\n        showChangePass(){\r\n            this.isShowChangePass = true;\r\n            this.isShowEditUser = false;\r\n        },\r\n\r\n        closeChangePass(){\r\n            this.isShowChangePass = false;\r\n            this.isShowEditUser = true;\r\n        },\r\n\r\n        userListClick(user){\r\n            if (this.websocket == null){\r\n                return\r\n            }\r\n            this.isRoom = false;\r\n            if (user.isActiveMessage == true){\r\n                user.isActiveMessage = false;\r\n                this.setReaded(user.id);\r\n            }\r\n            user.numOfActiveMessages = 0;\r\n            this.selected_room.id = user.id;\r\n            this.selected_room.name = user.name;\r\n            this.selected_room.online = user.online;\r\n            let r = this.findRoom(this.selected_room.id)\r\n            if (r == null){\r\n                return\r\n            }\r\n            this.selected_room.lastLoadedNumber = r.lastLoadedNumber;\r\n            if (r.lastLoadedNumber == 0){\r\n               this.askMessagesFromSErver();\r\n            } else {\r\n                this.$nextTick(() =>{\r\n                const messages_div = document.getElementById('messages');\r\n                messages_div.scrollTo({top: messages_div.scrollHeight});\r\n                    if (r.messages.length != 0 && r.lastLoadedNumber != 1){\r\n                         this.observeMessages();\r\n                    } \r\n                })\r\n            }\r\n        },\r\n\r\n        askMessagesFromSErver(){\r\n            if (this.websocket == null){\r\n                return\r\n            }\r\n            this.control.clear();\r\n            this.control.ControlMessageType.value = protocol.ControlMessage.MessagesRequest;\r\n            this.control.MessagesRequest.RoomId = this.selected_room.id;\r\n            this.control.MessagesRequest.LastMessageNumber = this.selected_room.lastLoadedNumber;\r\n            this.websocket.send(this.control.code());\r\n        },\r\n\r\n        observeMessages(){\r\n            this.observerOptions.root = document.getElementById('messages');\r\n            const observer = new IntersectionObserver(this.loadMessages, this.observerOptions);\r\n            const message = document.querySelectorAll('.message');\r\n            if (message.length != 0){\r\n                message.forEach(m =>{\r\n                    observer.observe(m)\r\n                })\r\n            }                        \r\n        },\r\n\r\n        messageSpaceClick(){\r\n            if (this.isRoom){\r\n                for (let i = 0; i<this.roomsList.length; i++ ){\r\n                    if (this.roomsList[i].id == this.selected_room.id){\r\n                        this.roomsList[i].isActiveMessage = false\r\n                        this.roomsList[i].numOfMessages = 0\r\n                        return\r\n                    }\r\n                }\r\n            }else{\r\n                for (let i = 0; i<this.list.length; i++ ){\r\n                    if (this.list[i].id == this.selected_room.id){\r\n                        if (this.list[i].isActiveMessage == true){\r\n                            this.list[i].isActiveMessage = false;\r\n                            this.setReaded(this.selected_room.id);\r\n                        }\r\n                        this.list[i].numOfMessages = 0;\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        roomClick(room){\r\n            this.isRoom = true\r\n            room.isActiveMessage = false\r\n            room.numOfActiveMessages = 0\r\n            this.selected_room.id = room.id\r\n            this.selected_room.name = room.name\r\n        },\r\n\r\n\r\n        roomSelected(id){\r\n            if (id == this.selected_room.id){\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        setReaded(id){\r\n            let ack = protocol.Acknowledge;\r\n            ack.clear();\r\n            ack.AckMessageType.value = 3;\r\n            ack.UserId = id;\r\n            this.websocket.send(ack.code());\r\n        },\r\n\r\n        compressImage(imgSrc){\r\n            let canvas = document.createElement('canvas');\r\n            let img = new Image();\r\n            img.src = imgSrc;\r\n            let width = img.width;\r\n            let heigth = img.height;\r\n\r\n            const maxWidth = 200, maxHeight = 200;\r\n\r\n            if (width > heigth){\r\n                if (width > maxWidth){\r\n                    heigth = Math.round(heigth *= maxWidth/width)\r\n                    width = maxWidth\r\n                }\r\n            } else {\r\n                if (heigth > maxHeight){\r\n                    width = Math.round(width *= maxHeight/heigth)\r\n                    heigth = maxHeight\r\n                }\r\n            }\r\n            canvas.width = width;\r\n            canvas.height = heigth;\r\n\r\n            let ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, width, heigth);\r\n\r\n            return canvas.toDataURL('image/jpeg', 0.7)\r\n        },\r\n\r\n        loadImage(event){\r\n            let input = event.target;\r\n            if (input.files && input.files[0]){\r\n                let reader = new FileReader();\r\n                let vm = this;\r\n                reader.onload = function(e){\r\n                    vm.imageSrc = e.target.result;\r\n                    vm.isImage = true;                        \r\n                };\r\n                reader.readAsDataURL(input.files[0]);\r\n            }        \r\n        },\r\n\r\n        popUpImage(img){\r\n            this.isShowImagePreview = true;\r\n            this.popUpImgSrc = img;\r\n        },\r\n\r\n        closePopUpImage(){\r\n            this.isShowImagePreview = false;\r\n            this.popUpImgSrc = \"\";\r\n        },\r\n\r\n        closePreview(){\r\n            this.$refs.imgUpload.value = null;\r\n            this.imageSrc = \"\";\r\n            this.isImage = false;\r\n        },\r\n\r\n        showSendBtn(){\r\n            if (this.text != \"\"){\r\n                return true\r\n            }\r\n            if (this.imageSrc != \"\"){\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        set_emoji(emoji){\r\n            document.getElementById(\"add_text\").value += emoji.value;\r\n            this.text += emoji.value;\r\n        },\r\n        loadMessages(messages){\r\n            let i = 0;\r\n            messages.forEach((message) => {\r\n                //console.log(message.intersectionRatio);\r\n                i++;\r\n                if (message.intersectionRatio > 0 && i < this.selected_room.lastLoadedNumber){\r\n                    //console.log(this.selected_room.lastLoadedNumber);\r\n                    this.askMessagesFromSErver();\r\n                }\r\n            })\r\n        },\r\n    },\r\n    computed:{\r\n        filteredList(){\r\n            let filter = this.filter_name;          \r\n            return this.list.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        },\r\n        indexOfSelectedRoom(){\r\n            for (let i=0; i<this.rooms.length; i++)\r\n            if (this.rooms[i].id == this.selected_room.id){\r\n                return i\r\n            }\r\n            return -1\r\n        },\r\n    },\r\n    updated(){\r\n        //this.observerOptions.root = document.getElementById('messages');\r\n\r\n        // const observer = new IntersectionObserver(this.loadMessages, this.observerOptions);\r\n        // const message = document.querySelectorAll('.message');\r\n        // if (message.length != 0){\r\n        //     message.forEach(m =>{\r\n        //         observer.observe(m)\r\n        //     })\r\n        // }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nul{\r\n    list-style: none;\r\n    cursor: pointer;\r\n}\r\n.connection_ready{\r\n    color: #2f8119;\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n} \r\n.error{\r\n    color: #e71111;\r\n    background-color: rgba(0, 0, 0, .7);\r\n    padding: 1px 5px;\r\n}   \r\n\r\n.chat_sidebar{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 0 0 300px;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    color: #88a8a4;\r\n    background-color: #315458;\r\n    box-shadow: 3px 0px 2px 0px rgba(0, 0, 0, 0.1);\r\n    margin: 0 5px 0 0;\r\n    padding: 10px 0;\r\n    min-height: 60vh;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.chat_sidebar .search{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 40px;\r\n    padding: 0 20px;\r\n    margin: 20px 40px;\r\n    border: 2px solid #102325;\r\n    border-radius: 40px;   \r\n}\r\n\r\n.chat_sidebar .search:hover{\r\n    background: #88a8a4;\r\n}\r\n\r\n.search input{\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    background: transparent url(\"@/icons/search.svg\") no-repeat 5px center;\r\n    background-size: 25px 25px;    \r\n    outline: none;\r\n    font-size: 18px;\r\n    padding: 10px 5px 10px 40px;\r\n}\r\n\r\n.chat_sidebar .room{\r\n    color: #94d2e3;\r\n}\r\n\r\n.search label{\r\n    width: 25px;\r\n    height: 25px;\r\n}\r\n\r\n.search label:hover{\r\n    transform: scale(1.2);\r\n}\r\n\r\n.chat_sidebar ul{\r\n    margin: 0;\r\n    padding: 10px 0;\r\n    border-bottom: dashed;\r\n}\r\n\r\n.chat_sidebar li{\r\n    height: 50px;\r\n    border-top: 1px solid #102325;\r\n    overflow: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n}\r\n\r\n.chat_sidebar li:last-child{\r\n    border-bottom: 1px solid #102325;\r\n}\r\n\r\n.chat_sidebar li:hover{\r\n    font-weight: bold;\r\n    border-right: 3px solid #88a8a4;\r\n    color: #859e99;\r\n    background: #102325;\r\n}\r\n\r\n.chat_sidebar p{\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n}\r\n\r\n.online{\r\n    color: #36cc0e;\r\n}\r\n\r\n.chat_sidebar .selected{\r\n    font-weight: bold;\r\n    color: #859e99;\r\n    background: #102325;\r\n}\r\n\r\n.chat_sidebar .recieve_message{\r\n    display: inline-block;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n    padding: 4px 7px;\r\n    color: #ffffff;\r\n    background: red;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n}\r\n\r\n/* Content */\r\n\r\n.chat_content{\r\n    height: auto;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/* Header */\r\n\r\n.chat_content .header{\r\n    height: 70px;\r\n    display: flex;\r\n    flex: 0 auto;\r\n    background-color: #3f5c60;\r\n    box-shadow: 0px 3px 2px rgba(0, 0, 0, .1);\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.header .selected_room{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.selected_room h1{\r\n    margin: 0 5px 0 20px;\r\n    padding: 5px;\r\n    color: #000000;\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n}\r\n\r\n.header h2{\r\n    margin: 0 50px;\r\n}\r\n\r\n.header .user{\r\n    font-size: 20px;\r\n    color: #000000;\r\n}\r\n\r\n.header .header_right{\r\n    margin-right: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n\r\n.header_right button{\r\n    margin: 0 0 0 20px;\r\n    height: 40px;\r\n    width: 40px;\r\n    cursor: pointer;\r\n    border: none;\r\n}\r\n\r\n.header_right button:hover{\r\n    transform: scale(1.3);\r\n}\r\n\r\n/* Messages */\r\n\r\n.message_container{\r\n    margin-top: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 0 auto;\r\n    background: #708784;\r\n}\r\n\r\n.message_container .messages{\r\n    flex: 1 1 auto;\r\n    padding: 20px 0;\r\n    overflow-y: auto;\r\n    height: 200px;\r\n}\r\n\r\n\r\n.messages .message{\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 5px 35px;\r\n}\r\n\r\n.message ul{\r\n    padding: 0 10px;\r\n    margin: 5px;\r\n}\r\n\r\n.message img{\r\n    max-width: 100%;\r\n}\r\n\r\n.messages .send{\r\n    background-color: #88a8a4;\r\n    border-radius: 15px;\r\n    padding: 0 15px;\r\n    max-width: 50%;\r\n}\r\n\r\n.messages .response{\r\n  float: right;\r\n  margin-right: 0px !important;\r\n  margin-left:auto;\r\n  padding: 0 15px;\r\n  background-color: #8cffaa;\r\n  border-radius: 15px;\r\n  max-width: 50%;\r\n}\r\n\r\n.message .msg_name{\r\n    color: #2f8119;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n}\r\n\r\n.message .text{\r\n    padding: 8px;\r\n}\r\n\r\n.chat_footer{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.text_field{\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 5px 5px 5px 0;\r\n    padding: 5px 20px;\r\n    background: #88a8a4;\r\n    border: 1.5px solid #2f8119;\r\n    border-radius: 8px;\r\n\r\n    input[type='text']{        \r\n      border: none;\r\n      background: transparent;\r\n      outline: none;\r\n      font-size: 18px;\r\n      flex-grow: 1;\r\n    }\r\n\r\n    input[type='file']{\r\n        width: 0;\r\n        height: 0;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n\r\n    label{\r\n       height: 40px;\r\n       width: 40px;\r\n       margin-right: 5px;\r\n    }\r\n\r\n    i{\r\n        height: 40px;\r\n        width: 40px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    i:hover{\r\n        transform: scale(1.2);\r\n    }\r\n\r\n    i:hover::after{\r\n        content: attr(data-title);\r\n        position: absolute;\r\n        left: 10%; bottom: 42px; /* Положение подсказки */\r\n        z-index: 1; /* Отображаем подсказку поверх других элементов */\r\n        font-family: Arial, sans-serif; /* Гарнитура шрифта */\r\n        font-size: 11px; /* Размер текста подсказки */        \r\n        color: #d2f7f1;\r\n    }\r\n\r\n}\r\n\r\n.image_preview{\r\n    position: relative;\r\n    display: flex;\r\n    margin: 5px 5px 0 0;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    background-color: rgba(174, 207, 197, 0.5);\r\n}\r\n\r\n.image{\r\n    display: inline-flex;\r\n    padding: 5px;\r\n\r\n    img{\r\n        min-height: 100px;\r\n        max-height: 150px;\r\n        width: 100%;\r\n        margin: auto;\r\n        border-radius: 5px;\r\n        border: none;\r\n    }\r\n}\r\n\r\n.image_options{\r\n    margin: 5px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000;\r\n\r\n    p{\r\n        margin: 0 5px;\r\n        padding: 0;\r\n    }\r\n\r\n    input{\r\n        height: 18px;\r\n        width: 18px;\r\n    }\r\n}\r\n\r\n.close_preview{\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    i{\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n}\r\n.picker-enter-active,\r\n.picker-leave-active {\r\n  transition: opacity 1s ease;\r\n}\r\n\r\n.picker-enter-from,\r\n.picker-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"edit_popup\">\r\n            <div>\r\n                <p v-if=\"resultOk\" class=\"reuslt_ok\">Данные успешно обновлены</p>\r\n                <p v-if=\"resultErr\" class=\"result_err\">{{ errString }}</p>\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"name\">Имя:</label>\r\n                <input type=\"text\" id=\"name\" v-model=\"name\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"familyname\">Фамилия:</label>\r\n                <input type=\"text\" id=\"familyname\" v-model=\"familyname\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"surname\">Отчество:</label>\r\n                <input type=\"text\" id=\"surname\" v-model=\"surname\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"birthdate\">Дата Рождения:</label>\r\n                <input type=\"date\" id=\"birthdate\" v-model=\"birthdate\">\r\n            </div>\r\n            <div class=\"change_pass\">\r\n                <button v-on:click=\"changePass\">Сменить пароль</button>\r\n            </div>\r\n            <div class=\"edit_footer\">\r\n                <button class=\"save\" v-on:click=\"updateUserInfo\">Сохранить</button>\r\n                <button class=\"close\" v-on:click=\"closeEdit\">Закрыть</button>\r\n            </div>   \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nimport { post } from '@/api/netork';\r\n\r\nexport default{\r\n    props:{\r\n        id:{\r\n           type: Number,\r\n           default: 0, \r\n        },\r\n    },\r\n    data(){\r\n        return{\r\n        name: \"\",\r\n        familyname: \"\",\r\n        surname: \"\",\r\n        birthdate: \"\",\r\n        resultOk:false,\r\n        resultErr:false,\r\n        errString: \"\"\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.closeEdit()\r\n        })\r\n    },\r\n    methods:{\r\n        closeEdit(){\r\n            this.$emit('closeEdit')\r\n        },\r\n        changePass(){\r\n            this.$emit('changePass')\r\n        },\r\n        updateUserInfo(){\r\n            let request = {\r\n                'id':this.id, \r\n                'name':this.name,\r\n                'familyname':this.familyname,\r\n                'surname':this.surname,\r\n                'birthdate':this.birthdate\r\n            }\r\n            post('/userupdate', request)\r\n             .then(() => {\r\n                this.resultOk = true\r\n             })\r\n             .catch((err) => {\r\n                this.resultErr = true\r\n                this.errString = 'Ошибка: '+ err\r\n             })\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\np{\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n}\r\n.reuslt_ok{\r\n    color:rgb(2, 245, 2);\r\n}\r\n.result_err{\r\n    color: red;\r\n}\r\n.edit_popup{\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    top:5%;\r\n    right: 5%;\r\n    color: black;\r\n    max-width: 100%;\r\n    min-width: 400px;\r\n    background: #708784;\r\n    border-radius: 25px;\r\n    border: 2px solid rgb(2, 53, 40);\r\n    padding: 20px;\r\n}\r\n.blok{\r\n    margin: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n    border-bottom: 1px solid #1e2a2b;\r\n    \r\n    label{\r\n        width: 50%;\r\n        text-align: left;\r\n        font-style: italic;\r\n        align-content: center;\r\n    }\r\n    input{\r\n        width: 100%;\r\n        height: 40px;\r\n        border: none;\r\n        outline: none;\r\n        background: transparent;\r\n        font-size: 15px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n    }\r\n    ::placeholder{\r\n        font-weight: bold;\r\n        font-size: 15px;\r\n    }\r\n}\r\n\r\n.change_pass{\r\n    display: flex;\r\n    margin: 15px 0 0 10px;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.change_pass button{\r\n    height: 40px;\r\n    border: none;\r\n    padding: 0 20px;\r\n    border-radius: 15px;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n    cursor: pointer;\r\n    background: rgba(12, 26, 28, 0.8);\r\n    color: #fff;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n}\r\n.change_pass button:hover{\r\n    background: #e3f7ff;\r\n    color: #000;\r\n}\r\n\r\n.edit_footer{\r\n    border-top: 2px solid #1e2a2b;\r\n    margin: 20px 0px 5px 0px;\r\n    padding: 15px 0 0 0;\r\n    button{\r\n        padding: 10px;\r\n        margin: 0 20px;\r\n        font-size: 15px;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 40px;\r\n        cursor: pointer;\r\n        width: 100px;\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n    }\r\n    button:hover{\r\n        transform: scale(1.1);\r\n    }\r\n    .save{\r\n        background: #315458;\r\n        color: antiquewhite;\r\n    }\r\n    .close{\r\n        background: red;\r\n        color: antiquewhite;\r\n    }\r\n}\r\n</style>","import { render } from \"./EditUser.vue?vue&type=template&id=fc240de6&scoped=true\"\nimport script from \"./EditUser.vue?vue&type=script&lang=js\"\nexport * from \"./EditUser.vue?vue&type=script&lang=js\"\n\nimport \"./EditUser.vue?vue&type=style&index=0&id=fc240de6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fc240de6\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"change_popup\">\r\n            <form v-on:submit.prevent=\"changePass\">\r\n                <div class=\"close\"><p v-on:click=\"close\" title=\"Закрыть\">X</p></div>\r\n                <h1>Сменить пароль</h1>\r\n                <div class=\"error\" v-show=\"isEroor\">\r\n                    <p>Error: {{ errResult }}</p>\r\n                </div>\r\n                <div v-show=\"isResult\">\r\n                    <p>Пороль обновлён</p>\r\n                </div>\r\n                <div class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"текущий пароль\" v-model=\"old_password\">\r\n                </div>\r\n                <div class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"новый пароль\" v-model=\"new_password\">\r\n                </div>\r\n                <div v-if=\"confirm\" class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"подтвердите пароль\" v-model=\"confirmed_password\">\r\n                </div>\r\n                <div class=\"check_block\">\r\n                    <div class=\"check\">\r\n                        <input type=\"checkbox\" id=\"show_pass\" v-model=\"show_pass\">\r\n                        <label for=\"show_pass\">Показать пароль</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"button_block\">\r\n                    <button type=\"submit\" :disabled=\"!check_pass\" :class=\"check_pass ? 'activ' : 'non_activ'\">Подтвердить</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { post } from '@/api/netork';\r\n\r\nexport default{\r\n    props:{\r\n        user_id: Number,\r\n        server_addr:{\r\n            type: String,\r\n            default: 'localhos:8080'\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            old_password:\"\",\r\n            new_password:\"\",\r\n            confirmed_password:\"\",\r\n            show_pass: false,\r\n            isResult: false,\r\n            isEroor: false,\r\n            errResult:\"\"\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.close()\r\n        })\r\n    },\r\n    methods:{\r\n        changePass(){\r\n            let request = {\r\n                'id':this.user_id,\r\n                'old':this.old_password,\r\n                'new':this.new_password\r\n            }\r\n            post('/changepass', request)\r\n             .then(() => {\r\n                this.isResult = true\r\n                this.isEroor = false\r\n             })\r\n             .catch((err) => {\r\n                this.isResult = false\r\n                this.isEroor = true\r\n                this.errResult = err.response.data\r\n             })\r\n        },\r\n        close(){\r\n            this.$emit('close')\r\n        }\r\n    },\r\n    computed:{\r\n        confirm(){\r\n            if (this.new_password.length > 4){\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        check_pass(){\r\n            if (this.new_password.length < 4){\r\n                return false\r\n            }\r\n\r\n            if (this.new_password != this.confirmed_password){\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1{\r\n    margin: 0 0 10px 0;\r\n    font-size: 25px;\r\n}\r\n.change_popup{\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    top: 10%;\r\n    height: max-content;\r\n    background: #708784;\r\n    color: #102325;\r\n    padding: 0 20px;\r\n    border-radius: 30px;\r\n}\r\n\r\n.close{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-right: 10px;\r\n    padding: 0;\r\n}\r\n\r\n.close p{\r\n    color: red;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-shadow: 1px 1px 2px black;\r\n    cursor: pointer;\r\n}\r\n\r\n.close p:hover{\r\n    transform: scale(1.2);\r\n}\r\n\r\n.input{\r\n    height: 40px;\r\n    width: 300px;\r\n    margin: 10px 0;\r\n    border-bottom: 1.5px solid #4f6355;\r\n}\r\n\r\n.input:hover{\r\n    border-bottom: 3px solid #4f6355;\r\n}\r\n\r\n.input input{\r\n    border: none;\r\n    background: transparent;\r\n    outline: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n}\r\n\r\n.input input::placeholder{\r\n    color: #102325;\r\n}\r\n\r\n.check{\r\n    margin: 20px 0 0 0;\r\n}\r\n\r\n.button_block{\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 20px 0;\r\n    padding: 0;\r\n}\r\n\r\n.button_block button{\r\n    width: 200px;\r\n    height: 40px;\r\n    border: none;\r\n    border-radius: 30px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n}\r\n\r\n.non_activ{\r\n    background: #d6ddd8;\r\n}\r\n\r\n.activ{\r\n    color: azure;\r\n    background: #315458;\r\n}\r\n\r\n.activ:hover{\r\n    transform: scale(1.1);\r\n}\r\n\r\n\r\n</style>","import { render } from \"./ChangePass.vue?vue&type=template&id=5c56cc72&scoped=true\"\nimport script from \"./ChangePass.vue?vue&type=script&lang=js\"\nexport * from \"./ChangePass.vue?vue&type=script&lang=js\"\n\nimport \"./ChangePass.vue?vue&type=style&index=0&id=5c56cc72&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5c56cc72\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"img_preview\">\r\n            <div v-on:click=\"close\"><i class=\"icon i_close\"></i></div>\r\n            <img :src=\"img\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default{\r\n    props:{\r\n        img:{\r\n            type: String,\r\n            default: '',\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.close()\r\n        })\r\n    },\r\n    methods:{        \r\n        close(){\r\n            this.$emit('close')\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.img_preview{\r\n    width: 80%;\r\n    height: 80%;\r\n    margin: auto;\r\n    position: relative;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n\r\n    div{\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 10px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    i{\r\n        min-width: 50px;\r\n        min-height: 50px;\r\n    }\r\n\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n}\r\n</style>","import { render } from \"./ImagePreview.vue?vue&type=template&id=55979468&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=js\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=js\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=55979468&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55979468\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"emoji_picker\" @mouseleave=\"close\">\r\n        <div class=\"emojis_conteiner\">\r\n            <div v-for=\"(emojis, category) in this.emojis\" :key=\"category\">\r\n                <h5>{{category}}</h5>\r\n                <div class=\"emoji\">\r\n                    <span \r\n                    v-for=\"(emoji, emojiName) in emojis\"\r\n                    :key=\"emojiName\"\r\n                    :title=\"emojiName\"\r\n                    @click=\"set_emoji(emoji)\"\r\n                    >{{ emoji }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    data(){\r\n        return {\r\n           emojis:{\r\n            'face-smiling':{\r\n                'grinning face':'😀',\r\n                'grinning face with big eyes': '😃',\r\n                'grinning face with smiling eyes': '😄',\r\n                'beaming face with smiling eyes': '😁',\r\n            },\r\n            'face-affection':{\r\n                'smiling face with hearts':'🥰',\r\n                'smiling face with heart-eyes': '😍',\r\n                'star-struck': '🤩',\r\n                'face blowing a kiss': '😘',\r\n            }\r\n           },\r\n           emoji: '', \r\n        }\r\n    },\r\n    methods:{\r\n        set_emoji(emoji){\r\n            this.emoji = emoji;\r\n            this.$emit('set_emoji',{\r\n                value: this.emoji\r\n            })\r\n        },\r\n        close(){\r\n            this.$emit('close');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.emoji_picker{\r\n    width:20%;\r\n    height:50%;\r\n    padding: 10px;\r\n    background-color:#315458;\r\n    border:none;\r\n    border-radius: 10px;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    position:absolute;\r\n    right: 10px;\r\n    bottom: 60px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1000;\r\n}\r\n\r\n.emojis_conteiner{\r\n    height: 100%;\r\n    background-color: #708784;\r\n    border-radius: 5px;\r\n    overflow-y: auto;\r\n    text-align: start;\r\n    padding: 5px;\r\n}\r\n\r\n.emojis_conteiner h5{\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin: 5px;\r\n    color: rgb(53, 53, 53);\r\n}\r\n\r\n.emoji{\r\n    border-top: solid 2px #315458;\r\n    padding: 5px 0;\r\n}\r\n.emoji span{\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n}\r\n</style>","import { render } from \"./Emogi.vue?vue&type=template&id=93216336\"\nimport script from \"./Emogi.vue?vue&type=script&lang=js\"\nexport * from \"./Emogi.vue?vue&type=script&lang=js\"\n\nimport \"./Emogi.vue?vue&type=style&index=0&id=93216336&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Chat.vue?vue&type=template&id=d11d08d8&scoped=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=js\"\nexport * from \"./Chat.vue?vue&type=script&lang=js\"\n\nimport \"./Chat.vue?vue&type=style&index=0&id=d11d08d8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d11d08d8\"]])\n\nexport default __exports__"],"names":["class","key","_createElementVNode","_hoisted_23","for","_createElementBlock","_Fragment","$data","isShowEditUser","_createBlock","_component_EditUser","onCloseEdit","$options","closeEditUser","onChangePass","showChangePass","user","_ctx","_createCommentVNode","isShowChangePass","_component_ChangePass","onClose","closeChangePass","user_id","id","_createVNode","_Transition","name","default","_withCtx","isEmoji","_component_EmojiPicker","onSet_emoji","set_emoji","closeEmoji","_","isShowImagePreview","_component_ImagePreview","closePopUpImage","img","popUpImgSrc","_hoisted_1","_hoisted_2","_hoisted_3","type","_cache","$event","filter_name","placeholder","autocomplete","_renderList","roomsList","room","onClick","roomClick","_normalizeClass","selected","roomSelected","_createTextVNode","_toDisplayString","isActiveMessage","_hoisted_5","numOfMessages","_hoisted_4","filteredList","userListClick","online","status_online","_hoisted_7","_hoisted_6","_hoisted_8","_hoisted_9","_hoisted_10","selected_room","i_online","i_offline","isRoom","connection_error","_hoisted_11","_hoisted_12","_hoisted_13","setUserName","args","showEditUser","logout","_hoisted_14","messageSpaceClick","rooms","indexOfSelectedRoom","messages","m","idx","from","err","_hoisted_16","_hoisted_17","_hoisted_18","message","src","popUpImage","_hoisted_19","_hoisted_15","_hoisted_20","_hoisted_21","_hoisted_22","closePreview","_hoisted_24","imageSrc","_hoisted_25","_hoisted_26","isCompressImage","_hoisted_27","isImage","_hoisted_28","text","onKeyup","_withKeys","send_message","onMouseenter","showEmoji","onMouseleave","accept","loadImage","ref","_hoisted_29","showSendBtn","resultOk","resultErr","errString","familyname","surname","birthdate","changePass","updateUserInfo","closeEdit","props","Number","data","mounted","vm","this","document","addEventListener","item","target","$refs","methods","$emit","request","post","then","catch","__exports__","onSubmit","_withModifiers","close","title","errResult","isEroor","isResult","required","show_pass","old_password","new_password","confirm","confirmed_password","disabled","check_pass","server_addr","String","response","computed","length","$props","emojis","category","emoji","emojiName","value","components","EditUser","ChangePass","ImagePreview","EmojiPicker","user_name","numOfActiveMessages","list","lastLoadedNumber","connection_ready","websocket","control","protocol","ControlCommand","Data","assembler","selectRoomMessages","observerOptions","root","rootMargin","threshold","init_chat","get","resp","parseInt","localStorage","getItem","clear","setItem","ask_name","init_ws_chat","status","$router","push","wsConnection","onopen","console","log","onmessage","onSocketMesssage","onerror","onSockerError","event","Uint8Array","controlCommandDecode","subarray","dataMessageDecode","errorMessageDecode","evnt","RoomId","UserId","r","findRoom","IndexNumber","DataMessageType","compressImage","binaryStr","atob","slice","DataMessageFormat","sendBySocket","dataRes","TextEncoder","binaryData","encode","maxLength","UserData","Fragmentation","On","fullMessage","result","fragmentation","i","FragmentType","Counter","send","code","raw","decode","processingControlCommand","ControlMessageType","ControlMessage","UserNameResponse","UserName","Connect","connectUser","Disconnect","disconnectUser","Registration","registrationNewUser","UserUpdate","UsersList","processingUsersList","NumberOfMessages","fillMessageList","NumOfMessages","indexNumber","isNaN","assemblePart","number","assembling","TextDecoder","strData","nameFromId","toString","btoa","setActiveMessageInRoom","setActiveMessageInList","newMessageProcessing","oldMessageProcessing","messages_div","getElementById","scrollTo","top","scrollHeight","behavior","Error","ErrMessageType","activeMessage","ListCommand","element","ListElements","nrm","num","$nextTick","observeMessages","body","removeItem","undefined","offsetY","setReaded","askMessagesFromSErver","MessagesRequest","LastMessageNumber","observer","IntersectionObserver","loadMessages","querySelectorAll","forEach","observe","ack","Acknowledge","AckMessageType","imgSrc","canvas","createElement","Image","width","heigth","height","maxWidth","maxHeight","Math","round","ctx","getContext","drawImage","toDataURL","input","files","reader","FileReader","onload","e","readAsDataURL","imgUpload","intersectionRatio","filter","toLowerCase","includes","updated","render"],"sourceRoot":""}