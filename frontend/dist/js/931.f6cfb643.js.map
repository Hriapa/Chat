{"version":3,"file":"js/931.f6cfb643.js","mappings":"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","sources":["webpack://webserver/./src/views/Chat.vue","webpack://webserver/./src/popup/EditUser.vue","webpack://webserver/./src/popup/EditUser.vue?5d2f","webpack://webserver/./src/popup/ChangePass.vue","webpack://webserver/./src/popup/ChangePass.vue?4678","webpack://webserver/./src/popup/ImagePreview.vue","webpack://webserver/./src/popup/ImagePreview.vue?5984","webpack://webserver/./src/popup/Emogi.vue","webpack://webserver/./src/popup/Emogi.vue?f234","webpack://webserver/./src/views/Chat.vue?65ee"],"sourcesContent":["<template>\r\n    <EditUser\r\n    v-if=\"isShowEditUser\"\r\n    v-bind:edit_user_param=\"edit_user_param\"\r\n    v-model:name=\"user_info.name\"\r\n    v-model:surname=\"user_info.surname\"\r\n    v-model:familyname=\"user_info.familyname\"\r\n    v-model:birthday=\"user_info.birthday\"\r\n    v-on:askUserInfo=\"askUserInfo\"\r\n    v-on:updateUser=\"updateUser\"\r\n    v-on:closeEdit=\"closeEditUser\"\r\n    v-on:changePass=\"showChangePass\"\r\n    />\r\n    <ChangePass\r\n    v-if=\"isShowChangePass\"\r\n    v-on:close=\"closeChangePass\"\r\n    v-bind:user_id=\"id\"\r\n    />\r\n    <Transition name=\"picker\">\r\n        <EmojiPicker\r\n        v-if=\"isEmoji\"\r\n        v-on:set_emoji=\"set_emoji\"\r\n        v-on:close=\"closeEmoji\"\r\n        />\r\n    </Transition>\r\n    <ImagePreview\r\n    v-if=\"isShowImagePreview\"\r\n    v-on:close=\"closePopUpImage\"\r\n    v-bind:img=\"popUpImgSrc\"\r\n    />\r\n    <div class=\"container-chat\">\r\n        <div class=\"chat_sidebar\">\r\n            <div class=\"search\">\r\n                <input type=\"search\" v-model=\"filter_name\" id=\"search\" placeholder=\"Поиск...\" autocomplete=\"off\">\r\n            </div>\r\n            <ul>\r\n                <li v-for=\"room in roomsList\" :key=\"room.id\" v-on:click=\"roomClick(room)\" class=\"room\" :class=\"{ selected: roomSelected(room.id) }\">\r\n                    {{ room.name }} \r\n                    <span v-if=\"room.isActiveMessage\" class=\"recieve_message\">{{ room.numOfMessages }}</span>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li v-for=\"user in filteredList\" :key=\"user.id\" v-on:click=\"userListClick(user)\" :class=\"{ selected: roomSelected(user.id) }\">\r\n                    <p :class=\"{online: user.online}\"> {{ user.name }} <i class=\"status\" :class=\"{status_online: user.online}\"></i></p> \r\n                    <span v-if=\"user.isActiveMessage\" class=\"recieve_message\">{{ user.numOfMessages }}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <section class=\"chat_content\">\r\n            <div class=\"header\">\r\n                <div class=\"selected_room\">\r\n                    <h1>{{ selected_room.name }}</h1>\r\n                    <i v-show=\"!isRoom\" class=\"icon\" :class=\"{i_online:selected_room.online, i_offline:!selected_room.online}\"></i>\r\n                </div>\r\n                <h2>\r\n                    <span class=\"error\" v-if=\"connection_error\">network connection error</span>\r\n                </h2>\r\n                <div class=\"header_right\">\r\n                    <p class=\"user\">{{ setUserName() }}</p>\r\n                    <button v-on:click=\"showEditUser\" class=\"i_properties icon\"></button>                    \r\n                    <button v-on:click=\"logout\" class=\"i_logout icon\"></button>\r\n                </div>\r\n            </div>\r\n            <div class=\"message_container\">\r\n                <div class=\"messages\" id=\"messages\" v-on:click=\" messageSpaceClick()\">                \r\n                    <div v-for=\"(m, idx) in rooms[indexOfSelectedRoom].messages\" :key=\"'m-' + idx\" class=\"message\" :id=idx+1>\r\n                        <div :class=\"{ 'send' : m.from=='me', 'response' : m.from=='other'}\">\r\n                            <ul>\r\n                                <li class=\"error\" v-if=\"m.err==true\">Ошибка отправки сообщения</li>\r\n                                <li class=\"msg_name\">{{ m.name }}</li>\r\n                                <li class=\"text\" v-if=\"m.type=='text'\">{{ m.message }}</li>\r\n                                <img :src=m.message v-if=\"m.type=='image'\" v-on:click=\"popUpImage(m.message)\">\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"chat_footer\">\r\n                <div class=\"image_preview\" v-show=\"isImage\">\r\n                    <div class=\"image\">\r\n                        <div class=\"close_preview\" v-on:click=\"closePreview\"><i class=\"icon i_close\"></i></div>\r\n                        <img :src=\"imageSrc\">\r\n                    </div>\r\n                    <div class=\"image_options\">\r\n                        <input type=\"checkbox\" name=\"compress image\" id=\"\" v-model=\"isCompressImage\"><p>Сжать изображение</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"text_field\">\r\n                    <input v-model=\"text\" type=\"text\" id=\"add_text\" placeholder=\"Сообщение...\" @keyup.enter=\"send_message\"/>\r\n                    <i class=\"i_emoji icon\" @mouseenter=\"showEmoji\" @mouseleave=\"closeEmoji\"></i>\r\n                    <input type=\"file\" accept=\"image/*\" id=\"add_pic\" @:change=\"loadImage\" ref=\"imgUpload\"><label for=\"add_pic\"><i class=\"i_add_pic icon\" data-title=\"Add picture\"></i></label>\r\n                    <i class=\"i_send icon\" v-if=\"showSendBtn()\" @click=\"send_message\" data-title=\"Send message\"></i>\r\n                </div>\r\n            </div>           \r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport EditUser from '../popup/EditUser.vue'\r\nimport ChangePass from '../popup/ChangePass.vue'\r\nimport ImagePreview from '../popup/ImagePreview.vue'\r\nimport EmojiPicker from '../popup/Emogi.vue'\r\nimport {get} from '../api/netork.js'\r\nimport { post } from '../api/netork.js'\r\nimport {protocol} from '../api/protocol.js'\r\nimport { wsConnection } from '../api/netork.js'\r\n\r\nexport default{\r\n    components:{\r\n        EditUser,\r\n        ChangePass,\r\n        ImagePreview,\r\n        EmojiPicker\r\n    }, \r\n    data(){\r\n        return {\r\n            id: 0,\r\n            user_name: \"\",\r\n            user_info: {\r\n                name: \"\",\r\n                surname: \"\",\r\n                familyname: \"\",\r\n                birthday: \"\",\r\n            },\r\n            edit_user_param:{\r\n                ok: false,\r\n                err: false,\r\n                errString: \"\"\r\n            },\r\n            isShowEditUser: false,\r\n            isShowChangePass: false,\r\n            isEmoji:false,\r\n            isShowImagePreview: false,\r\n            isImage: false,\r\n            isCompressImage: true,\r\n            imageSrc:'',\r\n            popUpImgSrc:'',\r\n            roomsList:[{\r\n                id:0,\r\n                name:\"Общие\",\r\n                isActiveMessage:false,\r\n                numOfActiveMessages:0,\r\n            }],\r\n            list:[{\r\n                id:0,\r\n                name: \"\",\r\n                online: false,\r\n                isActiveMessage:false,\r\n                numOfActiveMessages:0,\r\n            }],\r\n            filter_name: \"\",\r\n            isRoom: true,\r\n            selected_room: {\r\n                id: 0,\r\n                name:'Общие',\r\n                online:false,\r\n                lastLoadedNumber: 0,\r\n            },\r\n            rooms:[{\r\n                id: 0,\r\n                lastLoadedNumber: 0,\r\n                messages:[],\r\n            }],\r\n            connection_ready: false,\r\n            connection_error: true,\r\n            websocket: null,\r\n            control: protocol.ControlCommand,\r\n            data: protocol.Data,\r\n            assembler: protocol.assembler,\r\n            text: \"\",\r\n            messages:[],\r\n            selectRoomMessages: [],\r\n            observerOptions:{\r\n                root: null,\r\n                rootMargin: '0px',\r\n                threshold: 0.1,\r\n            }\r\n        }\r\n    },\r\n    mounted(){\r\n        this.init_chat();\r\n    },\r\n    methods:{\r\n        init_chat(){\r\n            get('/chat')\r\n            .then((resp) =>{\r\n                this.id = resp.data.user;\r\n                if (parseInt(localStorage.getItem('id')) != this.id){\r\n                    localStorage.clear();\r\n                    localStorage.setItem('id', this.id);\r\n                }\r\n                if (localStorage.getItem('name') == null){\r\n                    this.ask_name(this.id);\r\n                } else {\r\n                    this.user_name = localStorage.getItem('name');\r\n                }\r\n                this.init_ws_chat(this.id);\r\n            })\r\n            .catch((err) =>{\r\n                if (err.message == 'Network Error'){\r\n                    return\r\n                }\r\n                if (err.response.status == 401){\r\n                    this.$router.push('/login')\r\n                }\r\n                return 'false'\r\n            })\r\n        },\r\n\r\n        ask_name(id){\r\n            get('/username?id='+ id)\r\n            .then((resp) =>{\r\n                localStorage.setItem('name',resp.data.name);\r\n                this.user_name = resp.data.name;\r\n                return true\r\n            })\r\n            .catch((err) => {\r\n                if (err.message == 'Network Error'){\r\n                    return\r\n                }\r\n                if (err.response.status == 401){\r\n                    this.$router.push('/login')\r\n                }\r\n                return 'false'\r\n            })\r\n        },\r\n\r\n        init_ws_chat(id){\r\n            this.websocket = wsConnection('/ws?id='+ id);\r\n            \r\n            this.websocket.onopen = () => {\r\n                console.log(\"socket is open\")\r\n                this.connection_ready = true;\r\n                this.connection_error = false;\r\n            };\r\n            this.websocket.onmessage = this.onSocketMesssage;\r\n            this.websocket.onerror   = this.onSockerError;\r\n        },\r\n        onSocketMesssage(event){\r\n            let message = new Uint8Array(event.data);\r\n            switch (message[0]){\r\n                case 0: // Control\r\n                    this.controlCommandDecode(message.subarray(1));\r\n                    break;\r\n                case 1: // Data\r\n                    this.dataMessageDecode(message.subarray(1));\r\n                    break;\r\n                case 2: // Acknowledge\r\n                    this.ackMessageDecode(message.subarray(1));\r\n                    break;    \r\n                case 3: // Error\r\n                    this.errorMessageDecode(message.subarray(1));\r\n                    break;    \r\n            }\r\n        },\r\n        onSockerError(evnt){\r\n            this.connection_error = true;\r\n            this.connection_ready = false;\r\n            console.log(evnt)\r\n        },\r\n        \r\n        send_message(){\r\n            \r\n            this.data.clear();\r\n            if (this.isRoom == true){\r\n                this.data.RoomId = this.selected_room.id;\r\n            } else {\r\n                this.data.UserId = this.selected_room.id;\r\n            }\r\n            let r = this.findRoom(this.selected_room.id);\r\n            this.data.IndexNumber = r.messages.length + 1;\r\n            this.data.DataMessageType.value = 1;\r\n            if (this.imageSrc != ''){\r\n                if (this.isCompressImage == true){\r\n                    this.imageSrc = this.compressImage(this.imageSrc);\r\n                }\r\n                let binaryStr = atob(this.imageSrc.slice(23));\r\n                this.data.DataMessageFormat.value = 2;\r\n                this.sendBySocket(binaryStr);\r\n                r.messages.push({from:\"me\", type: \"image\", message: this.imageSrc, err: false});\r\n                this.closePreview();\r\n            }\r\n            if (this.text != ''){\r\n                this.data.DataMessageFormat.value = 1;\r\n                this.sendBySocket(this.text);\r\n                r.messages.push({from:\"me\", type: \"text\", message: this.text, err: false});\r\n                this.text=\"\";\r\n            }\r\n        },\r\n\r\n        sendBySocket(text){\r\n            let dataRes = new TextEncoder();\r\n            let binaryData = dataRes.encode(text);\r\n            if (binaryData.length > this.assembler.maxLength){\r\n                this.data.UserData.Fragmentation.On = true;\r\n                this.assembler.fullMessage = binaryData;\r\n                let result = this.assembler.fragmentation()\r\n                for (let i = 1; i <= result.length; i++){\r\n                    if (i == 1){\r\n                        this.data.UserData.Fragmentation.FragmentType = 2;\r\n                    } else if (i == result.length){\r\n                        this.data.UserData.Fragmentation.FragmentType = 1;\r\n                    } else {\r\n                        this.data.UserData.Fragmentation.FragmentType = 0;\r\n                    }\r\n                    this.data.UserData.Fragmentation.Counter = i;\r\n                    this.data.UserData.Data = result[i-1];\r\n                    this.websocket.send(this.data.code());\r\n                }\r\n            }else{\r\n                this.data.UserData.Data = binaryData;\r\n                this.websocket.send(this.data.code());\r\n            }\r\n        },\r\n\r\n        controlCommandDecode(raw){\r\n            this.control.clear();\r\n            this.control.decode(raw);\r\n            this.processingControlCommand();     \r\n        },\r\n\r\n        processingControlCommand(){\r\n            switch (this.control.ControlMessageType.value){\r\n                case protocol.ControlMessage.UserNameResponse: // User Name Response\r\n                    this.user_name = this.control.UserName;\r\n                    break;\r\n                case protocol.ControlMessage.Connect: // Connect\r\n                    this.connectUser(this.control.UserId);\r\n                    break;\r\n                case protocol.ControlMessage.Disconnect: //Disconnect\r\n                    this.disconnectUser(this.control.UserId);\r\n                    break;\r\n                case protocol.ControlMessage.Registration: //Registration\r\n                    this.registrationNewUser(this.control.UserId, this.control.UserName);\r\n                    break;\r\n                case protocol.ControlMessage.UserUpdate: //User Update\r\n                    this.userUpdate(this.control.UserId, this.control.UserName);\r\n                    break;  \r\n                case protocol.ControlMessage.UserInfoResponse: // User Info\r\n                    this.fillUserInfo();    \r\n                    break;\r\n                case protocol.ControlMessage.UsersList: // Users List\r\n                    this.processingUsersList(this.control);\r\n                    break;\r\n                case protocol.ControlMessage.NumberOfMessages: // Number of Messages\r\n                    this.fillMessageList(this.control.NumberOfMessages.NumOfMessages);\r\n                    break;    \r\n                default:\r\n                    break;        \r\n            }\r\n        },\r\n\r\n        dataMessageDecode(raw){\r\n            this.data.clear();\r\n            this.data.decode(raw);\r\n            let message = {\r\n                from: \"me\",\r\n                name: \"\",\r\n                type: \"\",\r\n                data: \"\",\r\n                room: 0,\r\n                indexNumber: 0,\r\n            };\r\n            if (this.data.UserData.Fragmentation.On == true){\r\n                this.assembler.clear();\r\n                let id = 0;\r\n                if (isNaN(this.data.RoomId) == false){\r\n                    id = this.data.RoomId;\r\n                } else {\r\n                    id = this.data.UserId;\r\n                }\r\n                let assemblePart = {\r\n                    id: id,\r\n                    type: this.data.UserData.Fragmentation.FragmentType,\r\n                    number: this.data.UserData.Fragmentation.Counter,\r\n                    data: this.data.UserData.Data\r\n                }\r\n                this.assembler.message = assemblePart;\r\n                this.assembler.assembling();\r\n                if (this.assembler.fullMessage == null){\r\n                    return\r\n                }\r\n                this.data.UserData.Data = this.assembler.fullMessage;\r\n            }\r\n            let text = new TextDecoder();\r\n            let strData = text.decode(this.data.UserData.Data);\r\n\r\n            if (this.data.UserId != this.id){\r\n                message.from = \"other\"\r\n                message.name = this.nameFromId(this.data.UserId);\r\n            }\r\n\r\n            message.type = this.data.DataMessageFormat.toString();\r\n\r\n            if (this.data.DataMessageFormat.toString() == 'image'){\r\n                message.data = `data:image/jpeg;base64,${btoa(strData)}`;\r\n            }\r\n\r\n            if (this.data.DataMessageFormat.toString() == 'text'){\r\n                message.data = strData;\r\n            }\r\n\r\n            switch (this.data.DataMessageType.toString()){\r\n                case 'new message':\r\n                    message.name = this.nameFromId(this.data.UserId);\r\n                    if (isNaN(this.data.RoomId) == false){\r\n                        message.room = this.data.RoomId;\r\n                        this.setActiveMessageInRoom(this.data.RoomId);\r\n                    }else{\r\n                        message.room = this.data.UserId;\r\n                        this.setActiveMessageInList(this.data.UserId);\r\n                    } \r\n                    this.newMessageProcessing(message);\r\n                    break;\r\n                case 'old message':\r\n                    if (isNaN(this.data.RoomId) == true){\r\n                        break;\r\n                    }\r\n                    message.room = this.data.RoomId;\r\n                    message.indexNumber = this.data.IndexNumber;   \r\n                    this.oldMessageProcessing(message);\r\n                    break;\r\n                default:\r\n                    break;    \r\n            }\r\n        },\r\n\r\n        newMessageProcessing(message){\r\n            let r = this.findRoom(message.room);\r\n\r\n            r.messages.push({from:\"other\", name: message.name, type: message.type, message: message.data, err: false});           \r\n\r\n            const messages_div = document.getElementById('messages');\r\n            messages_div.scrollTo({top: messages_div.scrollHeight, behavior: 'smooth'});\r\n        },\r\n\r\n        oldMessageProcessing(message){\r\n            let r = this.findRoom(message.room);\r\n            r.lastLoadedNumber = message.indexNumber;\r\n            this.selected_room.lastLoadedNumber = message.indexNumber;\r\n\r\n            if (r.messages.length < message.indexNumber){           \r\n                r.messages.push({from: message.from, name: message.name, type: message.type, message: message.data, err: false});\r\n            } else {\r\n                    r.messages[message.indexNumber-1].from = message.from;\r\n                    r.messages[message.indexNumber-1].name = message.name;\r\n                    r.messages[message.indexNumber-1].type = message.type;                \r\n                    r.messages[message.indexNumber-1].message = message.data;\r\n            }\r\n            const messages_div = document.getElementById('messages');\r\n            messages_div.scrollTo({top: messages_div.scrollHeight});\r\n        },\r\n\r\n        ackMessageDecode(raw){\r\n            let ack = protocol.Acknowledge;\r\n            ack.clear();\r\n            ack.decode(raw);\r\n            if (ack.AckMessageType.toString() == 'control'){\r\n                switch (ack.ControlAckType.value){\r\n                    case 1: // UserUpdeteConfirm\r\n                        this.edit_user_param.ok = true;\r\n                        break;\r\n                }\r\n            }\r\n        },\r\n\r\n        // Error messages\r\n        errorMessageDecode(raw){\r\n            let err = protocol.Error;\r\n            err.clear();\r\n            err.decode(raw);\r\n            if (err.ErrMessageType.toString() == 'control'){\r\n                switch (err.ControlMessageType.value){\r\n                    case this.protocol.ControlMessage.UserInfoUpdate:\r\n                        this.edit_user_param.err = true\r\n                        break;\r\n                }\r\n            }\r\n            if (err.ErrMessageType.toString() == 'data'){\r\n                let r = this.findRoom(err.UserId);\r\n                if (r.messages.length < err.IndexNumber){\r\n                    return\r\n                }\r\n                r.messages[err.IndexNumber-1].err = true;\r\n            }\r\n        },\r\n\r\n        connectUser(id){\r\n            if (this.selected_room.id == id){\r\n                this.selected_room.online = true\r\n            }\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    this.list[i].online = true\r\n                    return\r\n                }\r\n            }\r\n        },\r\n\r\n        disconnectUser(id){\r\n            if (this.selected_room.id == id){\r\n                this.selected_room.online = false\r\n            }\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    this.list[i].online = false\r\n                    return\r\n                }\r\n            }\r\n        },\r\n\r\n        // Registration\r\n        registrationNewUser(id, name){\r\n            this.list.push({id: id, name: name, online:false, isActiveMessage: false, numOfMessages: 0})\r\n            let r = this.findRoom(0);\r\n            r.messages.push({from:\"other\", name: name, type: 'text', message: 'Зарегестрирован новый пользователь', err: false});\r\n        },\r\n\r\n        // UserUpdate\r\n        userUpdate(id, name){\r\n            let user = this.findUser(id);\r\n            let oldName = user.name;\r\n            let r = this.findRoom(0);\r\n            r.messages.push({from:\"other\", name: oldName, type: 'text', message: 'Пользователь сменил имя на '+name, err: false});\r\n            user.name = name;\r\n        },\r\n\r\n        processingUsersList(control){\r\n            let activeMessage = false;\r\n            if (control.UsersList.ListCommand == 'set list' || control.ListCommand == 'refresh list'){\r\n                this.list.length = 0; // обнуляем старые данные\r\n                this.rooms.length = 1;\r\n            }\r\n            for (let element of control.UsersList.ListElements){\r\n                if (element[1].nrm != 0){\r\n                    activeMessage = true;\r\n                } else {\r\n                    activeMessage = false;\r\n                }\r\n                this.list.push({id: element[0],name:element[1].name, online: element[1].online, isActiveMessage: activeMessage, numOfMessages:  element[1].nrm});\r\n                this.rooms.push({id: element[0], lastLoadedNumber:0, messages:[]});\r\n                }\r\n        },\r\n\r\n        fillUserInfo(){\r\n            this.user_info.name = this.control.UserInfo.Name;\r\n            this.user_info.surname = this.control.UserInfo.Surname;\r\n            this.user_info.familyname = this.control.UserInfo.Familyname;\r\n            this.user_info.birthday = this.control.UserInfo.Birthdate;\r\n        },\r\n\r\n        fillMessageList(num){\r\n            if (num == 0){\r\n                return\r\n            }\r\n            let r = this.findRoom(this.selected_room.id)\r\n            for (let i = 0; i < num; i++){\r\n                r.messages.push({from:\"me\", name: \"\", type: \"text\", message: '', err: false})\r\n            }\r\n            this.selected_room.lastLoadedNumber = num;\r\n            this.$nextTick( () =>\r\n                this.observeMessages()\r\n            )\r\n        },\r\n\r\n        findRoom(id) {\r\n        for (let i = 0; i < this.rooms.length; i++) {\r\n          if (this.rooms[i].id == id) {\r\n              return this.rooms[i];\r\n          }\r\n        }\r\n        },\r\n\r\n        findUser(id) {\r\n        for (let i = 0; i < this.list.length; i++) {\r\n          if (this.list[i].id == id) {\r\n              return this.list[i];\r\n          }\r\n        }\r\n        },\r\n\r\n        nameFromId(id){\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                    return this.list[i].name\r\n                }\r\n            }\r\n        },\r\n\r\n        setActiveMessageInRoom(id){\r\n            for (let i = 0; i<this.roomsList.length; i++ ){\r\n                if (this.roomsList[i].id == id){\r\n                   this.roomsList[i].isActiveMessage = true\r\n                   this.roomsList[i].numOfMessages++\r\n                   return\r\n                }\r\n            }\r\n        },\r\n\r\n        setActiveMessageInList(id){\r\n            for (let i = 0; i<this.list.length; i++ ){\r\n                if (this.list[i].id == id){\r\n                   this.list[i].isActiveMessage = true\r\n                   this.list[i].numOfMessages++\r\n                   return\r\n                }\r\n            }\r\n        },\r\n\r\n        logout(){\r\n            let body = {id: this.id};\r\n            post('/logout', body)\r\n            .then(() => {\r\n                localStorage.removeItem('name');\r\n                this.websocket.close(1000, \"работа закончена\");\r\n                this.$router.push('/login');\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n\r\n        setUserName(){            \r\n            return this.user_name;\r\n        },\r\n\r\n        showEditUser(){\r\n            this.isShowEditUser = true;\r\n        },\r\n\r\n        showEmoji(){\r\n            this.isEmoji = true;\r\n        },\r\n\r\n        closeEmoji(event){\r\n            if (event == undefined){\r\n                this.isEmoji = false;\r\n            }else if (event.offsetY > 0){\r\n                this.isEmoji = false;\r\n            }\r\n        },\r\n    \r\n        // User Info PopUp\r\n\r\n        askUserInfo(){\r\n            this.control.clear();\r\n            this.control.ControlMessageType.value = protocol.ControlMessage.UserInfoRequest;\r\n            if (this.websocket == null){\r\n                this.edit_user_param.err = true;\r\n                this.edit_user_param.errString = 'Сервер не доступен';\r\n                return\r\n            }\r\n            this.websocket.send(this.control.code());\r\n        },\r\n\r\n        updateUser(){\r\n            this.control.clear();\r\n            this.control.ControlMessageType.value = protocol.ControlMessage.UserInfoUpdate;\r\n            this.control.UserInfo.Name = this.user_info.name;\r\n            this.control.UserInfo.Surname = this.user_info.surname;\r\n            this.control.UserInfo.Familyname = this.user_info.familyname;\r\n            this.control.UserInfo.Birthdate = this.user_info.birthday;\r\n\r\n            if (this.websocket == null){\r\n                this.edit_user_param.err = true;\r\n                this.edit_user_param.errString = 'нет связи с сервером';\r\n                return\r\n            }\r\n            this.websocket.send(this.control.code());\r\n        },\r\n\r\n        closeEditUser(){\r\n            this.edit_user_param.err = false;\r\n            this.edit_user_param.ok = false;\r\n            this.edit_user_param.errString = '';\r\n            this.isShowEditUser = false;            \r\n        },\r\n\r\n        showChangePass(){\r\n            this.isShowChangePass = true;\r\n            this.isShowEditUser = false;\r\n        },\r\n\r\n        closeChangePass(){\r\n            this.isShowChangePass = false;\r\n            this.isShowEditUser = true;\r\n        },\r\n\r\n        userListClick(user){\r\n            if (this.websocket == null){\r\n                return\r\n            }\r\n            this.isRoom = false;\r\n            if (user.isActiveMessage == true){\r\n                user.isActiveMessage = false;\r\n                this.setReaded(user.id);\r\n            }\r\n            user.numOfActiveMessages = 0;\r\n            this.selected_room.id = user.id;\r\n            this.selected_room.name = user.name;\r\n            this.selected_room.online = user.online;\r\n            let r = this.findRoom(this.selected_room.id)\r\n            if (r == null){\r\n                return\r\n            }\r\n            this.selected_room.lastLoadedNumber = r.lastLoadedNumber;\r\n            if (r.lastLoadedNumber == 0){\r\n               this.askMessagesFromSErver();\r\n            } else {\r\n                this.$nextTick(() =>{\r\n                const messages_div = document.getElementById('messages');\r\n                messages_div.scrollTo({top: messages_div.scrollHeight});\r\n                    if (r.messages.length != 0 && r.lastLoadedNumber != 1){\r\n                         this.observeMessages();\r\n                    } \r\n                })\r\n            }\r\n        },\r\n\r\n        askMessagesFromSErver(){\r\n            if (this.websocket == null){\r\n                return\r\n            }\r\n            this.control.clear();\r\n            this.control.ControlMessageType.value = protocol.ControlMessage.MessagesRequest;\r\n            this.control.MessagesRequest.RoomId = this.selected_room.id;\r\n            this.control.MessagesRequest.LastMessageNumber = this.selected_room.lastLoadedNumber;\r\n            this.websocket.send(this.control.code());\r\n        },\r\n\r\n        observeMessages(){\r\n            this.observerOptions.root = document.getElementById('messages');\r\n            const observer = new IntersectionObserver(this.loadMessages, this.observerOptions);\r\n            const message = document.querySelectorAll('.message');\r\n            if (message.length != 0){\r\n                message.forEach(m =>{\r\n                    observer.observe(m)\r\n                })\r\n            }                        \r\n        },\r\n\r\n        messageSpaceClick(){\r\n            if (this.isRoom){\r\n                for (let i = 0; i<this.roomsList.length; i++ ){\r\n                    if (this.roomsList[i].id == this.selected_room.id){\r\n                        this.roomsList[i].isActiveMessage = false\r\n                        this.roomsList[i].numOfMessages = 0\r\n                        return\r\n                    }\r\n                }\r\n            }else{\r\n                for (let i = 0; i<this.list.length; i++ ){\r\n                    if (this.list[i].id == this.selected_room.id){\r\n                        if (this.list[i].isActiveMessage == true){\r\n                            this.list[i].isActiveMessage = false;\r\n                            this.setReaded(this.selected_room.id);\r\n                        }\r\n                        this.list[i].numOfMessages = 0;\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        roomClick(room){\r\n            this.isRoom = true\r\n            room.isActiveMessage = false\r\n            room.numOfActiveMessages = 0\r\n            this.selected_room.id = room.id\r\n            this.selected_room.name = room.name\r\n        },\r\n\r\n\r\n        roomSelected(id){\r\n            if (id == this.selected_room.id){\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        setReaded(id){\r\n            let ack = protocol.Acknowledge;\r\n            ack.clear();\r\n            ack.AckMessageType.value = 2;\r\n            ack.DataAckType.value = 3;\r\n            ack.UserId = id;\r\n            this.websocket.send(ack.code());\r\n        },\r\n\r\n        compressImage(imgSrc){\r\n            let canvas = document.createElement('canvas');\r\n            let img = new Image();\r\n            img.src = imgSrc;\r\n            let width = img.width;\r\n            let heigth = img.height;\r\n\r\n            const maxWidth = 200, maxHeight = 200;\r\n\r\n            if (width > heigth){\r\n                if (width > maxWidth){\r\n                    heigth = Math.round(heigth *= maxWidth/width)\r\n                    width = maxWidth\r\n                }\r\n            } else {\r\n                if (heigth > maxHeight){\r\n                    width = Math.round(width *= maxHeight/heigth)\r\n                    heigth = maxHeight\r\n                }\r\n            }\r\n            canvas.width = width;\r\n            canvas.height = heigth;\r\n\r\n            let ctx = canvas.getContext('2d');\r\n            ctx.drawImage(img, 0, 0, width, heigth);\r\n\r\n            return canvas.toDataURL('image/jpeg', 0.7)\r\n        },\r\n\r\n        loadImage(event){\r\n            let input = event.target;\r\n            if (input.files && input.files[0]){\r\n                let reader = new FileReader();\r\n                let vm = this;\r\n                reader.onload = function(e){\r\n                    vm.imageSrc = e.target.result;\r\n                    vm.isImage = true;                        \r\n                };\r\n                reader.readAsDataURL(input.files[0]);\r\n            }        \r\n        },\r\n\r\n        popUpImage(img){\r\n            this.isShowImagePreview = true;\r\n            this.popUpImgSrc = img;\r\n        },\r\n\r\n        closePopUpImage(){\r\n            this.isShowImagePreview = false;\r\n            this.popUpImgSrc = \"\";\r\n        },\r\n\r\n        closePreview(){\r\n            this.$refs.imgUpload.value = null;\r\n            this.imageSrc = \"\";\r\n            this.isImage = false;\r\n        },\r\n\r\n        showSendBtn(){\r\n            if (this.text != \"\"){\r\n                return true\r\n            }\r\n            if (this.imageSrc != \"\"){\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n\r\n        set_emoji(emoji){\r\n            document.getElementById(\"add_text\").value += emoji.value;\r\n            this.text += emoji.value;\r\n        },\r\n        loadMessages(messages){\r\n            let i = 0;\r\n            messages.forEach((message) => {\r\n                //console.log(message.intersectionRatio);\r\n                i++;\r\n                if (message.intersectionRatio > 0 && i < this.selected_room.lastLoadedNumber){\r\n                    //console.log(this.selected_room.lastLoadedNumber);\r\n                    this.askMessagesFromSErver();\r\n                }\r\n            })\r\n        },\r\n    },\r\n    computed:{\r\n        filteredList(){\r\n            let filter = this.filter_name;          \r\n            return this.list.filter((item) => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        },\r\n        indexOfSelectedRoom(){\r\n            for (let i=0; i<this.rooms.length; i++)\r\n            if (this.rooms[i].id == this.selected_room.id){\r\n                return i\r\n            }\r\n            return -1\r\n        },\r\n    },\r\n    updated(){\r\n        //this.observerOptions.root = document.getElementById('messages');\r\n\r\n        // const observer = new IntersectionObserver(this.loadMessages, this.observerOptions);\r\n        // const message = document.querySelectorAll('.message');\r\n        // if (message.length != 0){\r\n        //     message.forEach(m =>{\r\n        //         observer.observe(m)\r\n        //     })\r\n        // }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nul{\r\n    list-style: none;\r\n    cursor: pointer;\r\n}\r\n.connection_ready{\r\n    color: #2f8119;\r\n    font-weight: bold;\r\n    font-size: 25px;\r\n} \r\n.error{\r\n    color: #e71111;\r\n    background-color: rgba(0, 0, 0, .7);\r\n    padding: 1px 5px;\r\n}   \r\n\r\n.chat_sidebar{\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 0 0 300px;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n    color: #88a8a4;\r\n    background-color: #315458;\r\n    box-shadow: 3px 0px 2px 0px rgba(0, 0, 0, 0.1);\r\n    margin: 0 5px 0 0;\r\n    padding: 10px 0;\r\n    min-height: 60vh;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n\r\n.chat_sidebar .search{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    height: 40px;\r\n    padding: 0 20px;\r\n    margin: 20px 40px;\r\n    border: 2px solid #102325;\r\n    border-radius: 40px;   \r\n}\r\n\r\n.chat_sidebar .search:hover{\r\n    background: #88a8a4;\r\n}\r\n\r\n.search input{\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    background: transparent url(\"@/icons/search.svg\") no-repeat 5px center;\r\n    background-size: 25px 25px;    \r\n    outline: none;\r\n    font-size: 18px;\r\n    padding: 10px 5px 10px 40px;\r\n}\r\n\r\n.chat_sidebar .room{\r\n    color: #94d2e3;\r\n}\r\n\r\n.search label{\r\n    width: 25px;\r\n    height: 25px;\r\n}\r\n\r\n.search label:hover{\r\n    transform: scale(1.2);\r\n}\r\n\r\n.chat_sidebar ul{\r\n    margin: 0;\r\n    padding: 10px 0;\r\n    border-bottom: dashed;\r\n}\r\n\r\n.chat_sidebar li{\r\n    height: 50px;\r\n    border-top: 1px solid #102325;\r\n    overflow: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n}\r\n\r\n.chat_sidebar li:last-child{\r\n    border-bottom: 1px solid #102325;\r\n}\r\n\r\n.chat_sidebar li:hover{\r\n    font-weight: bold;\r\n    border-right: 3px solid #88a8a4;\r\n    color: #859e99;\r\n    background: #102325;\r\n}\r\n\r\n.chat_sidebar p{\r\n    margin: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-end;\r\n}\r\n\r\n.online{\r\n    color: #36cc0e;\r\n}\r\n\r\n.chat_sidebar .selected{\r\n    font-weight: bold;\r\n    color: #859e99;\r\n    background: #102325;\r\n}\r\n\r\n.chat_sidebar .recieve_message{\r\n    display: inline-block;\r\n    font-size: 10px;\r\n    font-weight: bold;\r\n    padding: 4px 7px;\r\n    color: #ffffff;\r\n    background: red;\r\n    text-align: center;\r\n    border-radius: 50%;\r\n}\r\n\r\n/* Content */\r\n\r\n.chat_content{\r\n    height: auto;\r\n    flex: 1 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n/* Header */\r\n\r\n.chat_content .header{\r\n    height: 70px;\r\n    display: flex;\r\n    flex: 0 auto;\r\n    background-color: #3f5c60;\r\n    box-shadow: 0px 3px 2px rgba(0, 0, 0, .1);\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.header .selected_room{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.selected_room h1{\r\n    margin: 0 5px 0 20px;\r\n    padding: 5px;\r\n    color: #000000;\r\n    font-size: 25px;\r\n    font-weight: bold;\r\n}\r\n\r\n.header h2{\r\n    margin: 0 50px;\r\n}\r\n\r\n.header .user{\r\n    font-size: 20px;\r\n    color: #000000;\r\n}\r\n\r\n.header .header_right{\r\n    margin-right: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n\r\n.header_right button{\r\n    margin: 0 0 0 20px;\r\n    height: 40px;\r\n    width: 40px;\r\n    cursor: pointer;\r\n    border: none;\r\n}\r\n\r\n.header_right button:hover{\r\n    transform: scale(1.3);\r\n}\r\n\r\n/* Messages */\r\n\r\n.message_container{\r\n    margin-top: 2px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 0 auto;\r\n    background: #708784;\r\n}\r\n\r\n.message_container .messages{\r\n    flex: 1 1 auto;\r\n    padding: 20px 0;\r\n    overflow-y: auto;\r\n    height: 200px;\r\n}\r\n\r\n\r\n.messages .message{\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 5px 35px;\r\n}\r\n\r\n.message ul{\r\n    padding: 0 10px;\r\n    margin: 5px;\r\n}\r\n\r\n.message img{\r\n    max-width: 100%;\r\n}\r\n\r\n.messages .send{\r\n    background-color: #88a8a4;\r\n    border-radius: 15px;\r\n    padding: 0 15px;\r\n    max-width: 50%;\r\n}\r\n\r\n.messages .response{\r\n  float: right;\r\n  margin-right: 0px !important;\r\n  margin-left:auto;\r\n  padding: 0 15px;\r\n  background-color: #8cffaa;\r\n  border-radius: 15px;\r\n  max-width: 50%;\r\n}\r\n\r\n.message .msg_name{\r\n    color: #2f8119;\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n}\r\n\r\n.message .text{\r\n    padding: 8px;\r\n}\r\n\r\n.chat_footer{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.text_field{\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 5px 5px 5px 0;\r\n    padding: 5px 20px;\r\n    background: #88a8a4;\r\n    border: 1.5px solid #2f8119;\r\n    border-radius: 8px;\r\n\r\n    input[type='text']{        \r\n      border: none;\r\n      background: transparent;\r\n      outline: none;\r\n      font-size: 18px;\r\n      flex-grow: 1;\r\n    }\r\n\r\n    input[type='file']{\r\n        width: 0;\r\n        height: 0;\r\n        opacity: 0;\r\n        visibility: hidden;\r\n    }\r\n\r\n    label{\r\n       height: 40px;\r\n       width: 40px;\r\n       margin-right: 5px;\r\n    }\r\n\r\n    i{\r\n        height: 40px;\r\n        width: 40px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    i:hover{\r\n        transform: scale(1.2);\r\n    }\r\n\r\n    i:hover::after{\r\n        content: attr(data-title);\r\n        position: absolute;\r\n        left: 10%; bottom: 42px; /* Положение подсказки */\r\n        z-index: 1; /* Отображаем подсказку поверх других элементов */\r\n        font-family: Arial, sans-serif; /* Гарнитура шрифта */\r\n        font-size: 11px; /* Размер текста подсказки */        \r\n        color: #d2f7f1;\r\n    }\r\n\r\n}\r\n\r\n.image_preview{\r\n    position: relative;\r\n    display: flex;\r\n    margin: 5px 5px 0 0;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border-radius: 5px;\r\n    background-color: rgba(174, 207, 197, 0.5);\r\n}\r\n\r\n.image{\r\n    display: inline-flex;\r\n    padding: 5px;\r\n\r\n    img{\r\n        min-height: 100px;\r\n        max-height: 150px;\r\n        width: 100%;\r\n        margin: auto;\r\n        border-radius: 5px;\r\n        border: none;\r\n    }\r\n}\r\n\r\n.image_options{\r\n    margin: 5px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: #000;\r\n\r\n    p{\r\n        margin: 0 5px;\r\n        padding: 0;\r\n    }\r\n\r\n    input{\r\n        height: 18px;\r\n        width: 18px;\r\n    }\r\n}\r\n\r\n.close_preview{\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n\r\n    i{\r\n        width: 40px;\r\n        height: 40px;\r\n    }\r\n}\r\n.picker-enter-active,\r\n.picker-leave-active {\r\n  transition: opacity 1s ease;\r\n}\r\n\r\n.picker-enter-from,\r\n.picker-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"edit_popup\">\r\n            <div>\r\n                <p v-if=\"edit_user_param.ok\" class=\"reuslt_ok\">Данные успешно обновлены</p>\r\n                <p v-if=\"edit_user_param.err\" class=\"result_err\">{{ edit_user_param.errString }}</p>\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"name\">Имя:</label>\r\n                <input type=\"text\" id=\"name\" v-bind:value=\"name\" @input=\"$emit('update:name', $event.target.value)\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"familyname\">Фамилия:</label>\r\n                <input type=\"text\" id=\"familyname\" v-bind:value=\"familyname\" @input=\"$emit('update:familyname', $event.target.value)\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"surname\">Отчество:</label>\r\n                <input type=\"text\" id=\"surname\" v-bind:value=\"surname\" @input=\"$emit('update:surname', $event.target.value)\">\r\n            </div>\r\n            <div class=\"blok\">\r\n                <label for=\"birthdate\">Дата Рождения:</label>\r\n                <input type=\"date\" id=\"birthday\" v-bind:value=\"birthday\" @input=\"$emit('update:birthday', $event.target.value)\">\r\n            </div>\r\n            <div class=\"change_pass\">\r\n                <button v-on:click=\"changePass\">Сменить пароль</button>\r\n            </div>\r\n            <div class=\"edit_footer\">\r\n                <button class=\"save\" v-on:click=\"updateUserInfo\">Сохранить</button>\r\n                <button class=\"close\" v-on:click=\"closeEdit\">Закрыть</button>\r\n            </div>   \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\n\r\nexport default{\r\n    props:{\r\n        name:{\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        surname:{\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        familyname:{\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        birthday:{\r\n            type: String,\r\n            default: \"\",\r\n        },\r\n        edit_user_param:{\r\n           type: Object,\r\n           default: () => ({\r\n            ok: false,\r\n            err: false,\r\n            errString: \"\"\r\n           }), \r\n        },\r\n    },\r\n    data(){\r\n        return{}\r\n    },\r\n    mounted(){\r\n\r\n        this.askUserInfo();\r\n\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.closeEdit()\r\n        })\r\n    },\r\n    methods:{\r\n        closeEdit(){\r\n            this.$emit('closeEdit')\r\n        },\r\n        askUserInfo(){\r\n            this.$emit('askUserInfo');\r\n        },\r\n        changePass(){\r\n            this.$emit('changePass')\r\n        },\r\n        updateUserInfo(){\r\n            this.$emit('updateUser');\r\n        }\r\n    },\r\n    computed(){\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\np{\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n}\r\n.reuslt_ok{\r\n    color:rgb(2, 245, 2);\r\n}\r\n.result_err{\r\n    color: red;\r\n}\r\n.edit_popup{\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    top:5%;\r\n    right: 5%;\r\n    color: black;\r\n    max-width: 100%;\r\n    min-width: 400px;\r\n    background: #708784;\r\n    border-radius: 25px;\r\n    border: 2px solid rgb(2, 53, 40);\r\n    padding: 20px;\r\n}\r\n.blok{\r\n    margin: 5px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    font-weight: 500;\r\n    border-bottom: 1px solid #1e2a2b;\r\n    \r\n    label{\r\n        width: 50%;\r\n        text-align: left;\r\n        font-style: italic;\r\n        align-content: center;\r\n    }\r\n    input{\r\n        width: 100%;\r\n        height: 40px;\r\n        border: none;\r\n        outline: none;\r\n        background: transparent;\r\n        font-size: 15px;\r\n        text-align: center;\r\n        font-weight: 600;\r\n    }\r\n    ::placeholder{\r\n        font-weight: bold;\r\n        font-size: 15px;\r\n    }\r\n}\r\n\r\n.change_pass{\r\n    display: flex;\r\n    margin: 15px 0 0 10px;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.change_pass button{\r\n    height: 40px;\r\n    border: none;\r\n    padding: 0 20px;\r\n    border-radius: 15px;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n    cursor: pointer;\r\n    background: rgba(12, 26, 28, 0.8);\r\n    color: #fff;\r\n    font-size: 15px;\r\n    font-weight: 500;\r\n}\r\n.change_pass button:hover{\r\n    background: #e3f7ff;\r\n    color: #000;\r\n}\r\n\r\n.edit_footer{\r\n    border-top: 2px solid #1e2a2b;\r\n    margin: 20px 0px 5px 0px;\r\n    padding: 15px 0 0 0;\r\n    button{\r\n        padding: 10px;\r\n        margin: 0 20px;\r\n        font-size: 15px;\r\n        font-weight: bold;\r\n        border: none;\r\n        border-radius: 40px;\r\n        cursor: pointer;\r\n        width: 100px;\r\n        box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n    }\r\n    button:hover{\r\n        transform: scale(1.1);\r\n    }\r\n    .save{\r\n        background: #315458;\r\n        color: antiquewhite;\r\n    }\r\n    .close{\r\n        background: red;\r\n        color: antiquewhite;\r\n    }\r\n}\r\n</style>","import { render } from \"./EditUser.vue?vue&type=template&id=2ffba603&scoped=true\"\nimport script from \"./EditUser.vue?vue&type=script&lang=js\"\nexport * from \"./EditUser.vue?vue&type=script&lang=js\"\n\nimport \"./EditUser.vue?vue&type=style&index=0&id=2ffba603&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2ffba603\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"change_popup\">\r\n            <form v-on:submit.prevent=\"changePass\">\r\n                <div class=\"close\"><p v-on:click=\"close\" title=\"Закрыть\">X</p></div>\r\n                <h1>Сменить пароль</h1>\r\n                <div class=\"error\" v-show=\"isEroor\">\r\n                    <p>Error: {{ errResult }}</p>\r\n                </div>\r\n                <div v-show=\"isResult\">\r\n                    <p>Пороль обновлён</p>\r\n                </div>\r\n                <div class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"текущий пароль\" v-model=\"old_password\">\r\n                </div>\r\n                <div class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"новый пароль\" v-model=\"new_password\">\r\n                </div>\r\n                <div v-if=\"confirm\" class=\"input\">\r\n                    <input required :type=\"!show_pass ? 'password' : 'text'\" placeholder=\"подтвердите пароль\" v-model=\"confirmed_password\">\r\n                </div>\r\n                <div class=\"check_block\">\r\n                    <div class=\"check\">\r\n                        <input type=\"checkbox\" id=\"show_pass\" v-model=\"show_pass\">\r\n                        <label for=\"show_pass\">Показать пароль</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"button_block\">\r\n                    <button type=\"submit\" :disabled=\"!check_pass\" :class=\"check_pass ? 'activ' : 'non_activ'\">Подтвердить</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport { post } from '@/api/netork';\r\n\r\nexport default{\r\n    props:{\r\n        user_id: Number,\r\n    },\r\n    data(){\r\n        return{\r\n            old_password:\"\",\r\n            new_password:\"\",\r\n            confirmed_password:\"\",\r\n            show_pass: false,\r\n            isResult: false,\r\n            isEroor: false,\r\n            errResult:\"\"\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.close()\r\n        })\r\n    },\r\n    methods:{\r\n        changePass(){\r\n            let request = {\r\n                'id':this.user_id,\r\n                'old':this.old_password,\r\n                'new':this.new_password\r\n            }\r\n            post('/changepass', request)\r\n             .then(() => {\r\n                this.isResult = true\r\n                this.isEroor = false\r\n             })\r\n             .catch((err) => {\r\n                this.isResult = false\r\n                this.isEroor = true\r\n                this.errResult = err.response.data\r\n             })\r\n        },\r\n        close(){\r\n            this.$emit('close')\r\n        }\r\n    },\r\n    computed:{\r\n        confirm(){\r\n            if (this.new_password.length > 4){\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        check_pass(){\r\n            if (this.new_password.length < 4){\r\n                return false\r\n            }\r\n\r\n            if (this.new_password != this.confirmed_password){\r\n                return false\r\n            }\r\n            return true\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1{\r\n    margin: 0 0 10px 0;\r\n    font-size: 25px;\r\n}\r\n.change_popup{\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    top: 10%;\r\n    height: max-content;\r\n    background: #708784;\r\n    color: #102325;\r\n    padding: 0 20px;\r\n    border-radius: 30px;\r\n}\r\n\r\n.close{\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-right: 10px;\r\n    padding: 0;\r\n}\r\n\r\n.close p{\r\n    color: red;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    text-shadow: 1px 1px 2px black;\r\n    cursor: pointer;\r\n}\r\n\r\n.close p:hover{\r\n    transform: scale(1.2);\r\n}\r\n\r\n.input{\r\n    height: 40px;\r\n    width: 300px;\r\n    margin: 10px 0;\r\n    border-bottom: 1.5px solid #4f6355;\r\n}\r\n\r\n.input:hover{\r\n    border-bottom: 3px solid #4f6355;\r\n}\r\n\r\n.input input{\r\n    border: none;\r\n    background: transparent;\r\n    outline: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n}\r\n\r\n.input input::placeholder{\r\n    color: #102325;\r\n}\r\n\r\n.check{\r\n    margin: 20px 0 0 0;\r\n}\r\n\r\n.button_block{\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 20px 0;\r\n    padding: 0;\r\n}\r\n\r\n.button_block button{\r\n    width: 200px;\r\n    height: 40px;\r\n    border: none;\r\n    border-radius: 30px;\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px, rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\r\n}\r\n\r\n.non_activ{\r\n    background: #d6ddd8;\r\n}\r\n\r\n.activ{\r\n    color: azure;\r\n    background: #315458;\r\n}\r\n\r\n.activ:hover{\r\n    transform: scale(1.1);\r\n}\r\n\r\n\r\n</style>","import { render } from \"./ChangePass.vue?vue&type=template&id=5d64629d&scoped=true\"\nimport script from \"./ChangePass.vue?vue&type=script&lang=js\"\nexport * from \"./ChangePass.vue?vue&type=script&lang=js\"\n\nimport \"./ChangePass.vue?vue&type=style&index=0&id=5d64629d&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5d64629d\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"popup_wrapper\" ref=\"popup_wrapper\">\r\n        <div class=\"img_preview\">\r\n            <div v-on:click=\"close\"><i class=\"icon i_close\"></i></div>\r\n            <img :src=\"img\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default{\r\n    props:{\r\n        img:{\r\n            type: String,\r\n            default: '',\r\n        }\r\n    },\r\n    mounted(){\r\n        let vm = this;\r\n        document.addEventListener('click', function(item) {\r\n            if (item.target == vm.$refs['popup_wrapper'])\r\n            vm.close()\r\n        })\r\n    },\r\n    methods:{        \r\n        close(){\r\n            this.$emit('close')\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.img_preview{\r\n    width: 80%;\r\n    height: 80%;\r\n    margin: auto;\r\n    position: relative;\r\n    background-color: rgba(255, 255, 255, 0.75);\r\n\r\n    div{\r\n        position: absolute;\r\n        top: 10px;\r\n        right: 10px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    i{\r\n        min-width: 50px;\r\n        min-height: 50px;\r\n    }\r\n\r\n    img{\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: contain;\r\n    }\r\n}\r\n</style>","import { render } from \"./ImagePreview.vue?vue&type=template&id=55979468&scoped=true\"\nimport script from \"./ImagePreview.vue?vue&type=script&lang=js\"\nexport * from \"./ImagePreview.vue?vue&type=script&lang=js\"\n\nimport \"./ImagePreview.vue?vue&type=style&index=0&id=55979468&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-55979468\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"emoji_picker\" @mouseleave=\"close\">\r\n        <div class=\"emojis_conteiner\">\r\n            <div v-for=\"(emojis, category) in this.emojis\" :key=\"category\">\r\n                <h5>{{category}}</h5>\r\n                <div class=\"emoji\">\r\n                    <span \r\n                    v-for=\"(emoji, emojiName) in emojis\"\r\n                    :key=\"emojiName\"\r\n                    :title=\"emojiName\"\r\n                    @click=\"set_emoji(emoji)\"\r\n                    >{{ emoji }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    data(){\r\n        return {\r\n           emojis:{\r\n            'face-smiling':{\r\n                'grinning face':'😀',\r\n                'grinning face with big eyes': '😃',\r\n                'grinning face with smiling eyes': '😄',\r\n                'beaming face with smiling eyes': '😁',\r\n            },\r\n            'face-affection':{\r\n                'smiling face with hearts':'🥰',\r\n                'smiling face with heart-eyes': '😍',\r\n                'star-struck': '🤩',\r\n                'face blowing a kiss': '😘',\r\n            }\r\n           },\r\n           emoji: '', \r\n        }\r\n    },\r\n    methods:{\r\n        set_emoji(emoji){\r\n            this.emoji = emoji;\r\n            this.$emit('set_emoji',{\r\n                value: this.emoji\r\n            })\r\n        },\r\n        close(){\r\n            this.$emit('close');\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.emoji_picker{\r\n    width:20%;\r\n    height:50%;\r\n    padding: 10px;\r\n    background-color:#315458;\r\n    border:none;\r\n    border-radius: 10px;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    position:absolute;\r\n    right: 10px;\r\n    bottom: 60px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 1000;\r\n}\r\n\r\n.emojis_conteiner{\r\n    height: 100%;\r\n    background-color: #708784;\r\n    border-radius: 5px;\r\n    overflow-y: auto;\r\n    text-align: start;\r\n    padding: 5px;\r\n}\r\n\r\n.emojis_conteiner h5{\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin: 5px;\r\n    color: rgb(53, 53, 53);\r\n}\r\n\r\n.emoji{\r\n    border-top: solid 2px #315458;\r\n    padding: 5px 0;\r\n}\r\n.emoji span{\r\n    font-size: 20px;\r\n    cursor: pointer;\r\n}\r\n</style>","import { render } from \"./Emogi.vue?vue&type=template&id=93216336\"\nimport script from \"./Emogi.vue?vue&type=script&lang=js\"\nexport * from \"./Emogi.vue?vue&type=script&lang=js\"\n\nimport \"./Emogi.vue?vue&type=style&index=0&id=93216336&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Chat.vue?vue&type=template&id=4a43c16e&scoped=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=js\"\nexport * from \"./Chat.vue?vue&type=script&lang=js\"\n\nimport \"./Chat.vue?vue&type=style&index=0&id=4a43c16e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a43c16e\"]])\n\nexport default __exports__"],"names":["class","key","_createElementVNode","_hoisted_23","for","_createElementBlock","_Fragment","$data","isShowEditUser","_createBlock","_component_EditUser","edit_user_param","name","user_info","_cache","$event","surname","familyname","birthday","onAskUserInfo","$options","askUserInfo","onUpdateUser","updateUser","onCloseEdit","closeEditUser","onChangePass","showChangePass","_createCommentVNode","isShowChangePass","_component_ChangePass","onClose","closeChangePass","user_id","id","_createVNode","_Transition","default","_withCtx","isEmoji","_component_EmojiPicker","onSet_emoji","set_emoji","closeEmoji","_","isShowImagePreview","_component_ImagePreview","closePopUpImage","img","popUpImgSrc","_hoisted_1","_hoisted_2","_hoisted_3","type","filter_name","placeholder","autocomplete","_renderList","roomsList","room","onClick","roomClick","_normalizeClass","selected","roomSelected","_createTextVNode","_toDisplayString","isActiveMessage","_hoisted_5","numOfMessages","_hoisted_4","filteredList","user","userListClick","online","status_online","_hoisted_7","_hoisted_6","_hoisted_8","_hoisted_9","_hoisted_10","selected_room","i_online","i_offline","isRoom","connection_error","_hoisted_11","_hoisted_12","_hoisted_13","setUserName","args","showEditUser","logout","_hoisted_14","messageSpaceClick","rooms","indexOfSelectedRoom","messages","m","idx","from","err","_hoisted_16","_hoisted_17","_hoisted_18","message","src","popUpImage","_hoisted_19","_hoisted_15","_hoisted_20","_hoisted_21","_hoisted_22","closePreview","_hoisted_24","imageSrc","_hoisted_25","_hoisted_26","isCompressImage","_hoisted_27","isImage","_hoisted_28","text","onKeyup","_withKeys","send_message","onMouseenter","showEmoji","onMouseleave","accept","loadImage","ref","_hoisted_29","showSendBtn","$props","ok","errString","value","onInput","_ctx","$emit","target","changePass","updateUserInfo","closeEdit","props","String","Object","data","mounted","this","vm","document","addEventListener","item","$refs","methods","computed","__exports__","onSubmit","_withModifiers","close","title","errResult","isEroor","isResult","required","show_pass","old_password","new_password","confirm","confirmed_password","disabled","check_pass","Number","request","post","then","catch","response","length","emojis","category","emoji","emojiName","components","EditUser","ChangePass","ImagePreview","EmojiPicker","user_name","numOfActiveMessages","list","lastLoadedNumber","connection_ready","websocket","control","protocol","ControlCommand","Data","assembler","selectRoomMessages","observerOptions","root","rootMargin","threshold","init_chat","get","resp","parseInt","localStorage","getItem","clear","setItem","ask_name","init_ws_chat","status","$router","push","wsConnection","onopen","console","log","onmessage","onSocketMesssage","onerror","onSockerError","event","Uint8Array","controlCommandDecode","subarray","dataMessageDecode","ackMessageDecode","errorMessageDecode","evnt","RoomId","UserId","r","findRoom","IndexNumber","DataMessageType","compressImage","binaryStr","atob","slice","DataMessageFormat","sendBySocket","dataRes","TextEncoder","binaryData","encode","maxLength","UserData","Fragmentation","On","fullMessage","result","fragmentation","i","FragmentType","Counter","send","code","raw","decode","processingControlCommand","ControlMessageType","ControlMessage","UserNameResponse","UserName","Connect","connectUser","Disconnect","disconnectUser","Registration","registrationNewUser","UserUpdate","userUpdate","UserInfoResponse","fillUserInfo","UsersList","processingUsersList","NumberOfMessages","fillMessageList","NumOfMessages","indexNumber","isNaN","assemblePart","number","assembling","TextDecoder","strData","nameFromId","toString","btoa","setActiveMessageInRoom","setActiveMessageInList","newMessageProcessing","oldMessageProcessing","messages_div","getElementById","scrollTo","top","scrollHeight","behavior","ack","Acknowledge","AckMessageType","ControlAckType","Error","ErrMessageType","UserInfoUpdate","findUser","oldName","activeMessage","ListCommand","element","ListElements","nrm","UserInfo","Name","Surname","Familyname","Birthdate","num","$nextTick","observeMessages","body","removeItem","undefined","offsetY","UserInfoRequest","setReaded","askMessagesFromSErver","MessagesRequest","LastMessageNumber","observer","IntersectionObserver","loadMessages","querySelectorAll","forEach","observe","DataAckType","imgSrc","canvas","createElement","Image","width","heigth","height","maxWidth","maxHeight","Math","round","ctx","getContext","drawImage","toDataURL","input","files","reader","FileReader","onload","e","readAsDataURL","imgUpload","intersectionRatio","filter","toLowerCase","includes","updated","render"],"sourceRoot":""}